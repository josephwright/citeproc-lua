import luadata

stop_words = [
        "a",
        "according to",
        "across",
        "afore",
        "after",
        "against",
        "ahead of",
        "along",
        "alongside",
        "amid",
        "amidst",
        "among",
        "amongst",
        "an",
        "and",
        "anenst",
        "apart from",
        "apropos",
        "apud",
        "around",
        "as",
        "as regards",
        "aside",
        "astride",
        "at",
        "athwart",
        "atop",
        "back to",
        "barring",
        "because of",
        "before",
        "behind",
        "below",
        "beneath",
        "beside",
        "besides",
        "between",
        "beyond",
        "but",
        "by",
        "c",
        "ca",
        "circa",
        "close to",
        "d'",
        "de",
        "despite",
        "down",
        "due to",
        "during",
        "et",
        "except",
        "far from",
        "for",
        "forenenst",
        "from",
        "given",
        "in",
        "inside",
        "instead of",
        "into",
        "lest",
        "like",
        "modulo",
        "near",
        "next",
        "nor",
        "notwithstanding",
        "of",
        "off",
        "on",
        "onto",
        "or",
        "out",
        "outside of",
        "over",
        "per",
        "plus",
        "prior to",
        "pro",
        "pursuant to",
        "qua",
        "rather than",
        "regardless of",
        "sans",
        "since",
        "so",
        "such as",
        "than",
        "that of",
        "the",
        "through",
        "throughout",
        "thru",
        "thruout",
        "till",
        "to",
        "toward",
        "towards",
        "under",
        "underneath",
        "until",
        "unto",
        "up",
        "upon",
        "v.",
        "van",
        "versus",
        "via",
        "vis-à-vis",
        "von",
        "vs.",
        "where as",
        "with",
        "within",
        "without",
        "yet"
    ]

citeproc_js_skip_words = ["about","above","across","afore","after","against","al", "along","alongside","amid","amidst","among","amongst","anenst","apropos","apud","around","as","aside","astride","at","athwart","atop","barring","before","behind","below","beneath","beside","besides","between","beyond","but","by","circa","despite","down","during","et", "except","for","forenenst","from","given","in","inside","into","lest","like","modulo","near","next","notwithstanding","of","off","on","onto","out","over","per","plus","pro","qua","sans","since","than","through"," thru","throughout","thruout","till","to","toward","towards","under","underneath","until","unto","up","upon","versus","vs.","v.","vs","v","via","vis-à-vis","with","within","without","according to","ahead of","apart from","as for","as of","as per","as regards","aside from","back to","because of","close to","due to","except for","far from","inside of","instead of","near to","next to","on to","out from","out of","outside of","prior to","pursuant to","rather than","regardless of","such as","that of","up to","where as","or", "yet", "so", "for", "and", "nor", "a", "an", "the", "de", "d'", "von", "van", "c", "ca"]

words = list(sorted([w for w in citeproc_js_skip_words if w not in stop_words and not w.startswith(' ')]))
words = dict([(w, True) for w in words])
print(luadata.dumps(words))
