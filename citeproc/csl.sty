%
% Copyright (C) 2021 Zeping Lee
%

\NeedsTeXFormat{LaTeX2e}
\RequirePackage{expl3}
\RequirePackage{xparse}
\ProvidesExplPackage{csl}{2021-10-18}{0.0.1}{Citation Style Language for LaTeX}

% \msg_new:nnn { csl } { require-luatex }
%   { LuaTeX~ is~ required~ for~ `csl'~ package. }
% \sys_if_engine_luatex:F { \msg_fatal:nn { csl } { require-luatex } }

\sys_if_engine_luatex:T
  { \lua_now:n { csl = require("csl") } }

\RequirePackage { filehook }

\cs_new:Npn \csl_incompatible_package:n #1
  {
    \AtBeginOfPackageFile* { #1 }
      { \msg_error:nnn { csl } { incompatible-package } { #1 } }
  }
\msg_new:nnn { csl } { incompatible-package }
  { The~ `#1'~ package~ is~ incompatible~ with~ `citeproc'. }

\csl_incompatible_package:n { babelbib }
\csl_incompatible_package:n { backref }
\csl_incompatible_package:n { bibtopic }
\csl_incompatible_package:n { bibunits }
\csl_incompatible_package:n { chapterbib }
\csl_incompatible_package:n { cite }
\csl_incompatible_package:n { citeref }
\csl_incompatible_package:n { inlinebib }
\csl_incompatible_package:n { jurabib }
\csl_incompatible_package:n { mcite }
\csl_incompatible_package:n { mciteplus }
\csl_incompatible_package:n { multibib }
\csl_incompatible_package:n { natbib }
\csl_incompatible_package:n { splitbib }


\NewDocumentCommand \cslsetup { m }
  { \keys_set:nn { csl } {#1} }

\NewDocumentCommand \csloptions { m } { }

\DeclareDocumentCommand \cite { o o m }
  {
    \IfValueTF { #2 }
      { \csl_cite_normalize:nnn { #1 } { #2 } { #3 } }
      {
        \IfValueTF { #1 }
          { \csl_cite_normalize:nnn { } { #1 } { #3 } }
          { \csl_cite_normalize:nnn { } { } { #3 } }
      }
  }

\DeclareDocumentCommand \nocite { m }
  {
    \if@filesw
      {
        \immediate \write \@auxout
          { \string \citation { { } { } { * } } }
      }
    \fi
    \sys_if_engine_luatex:T
      { \lua_now:n { csl.register_items("#1") } }
}

\tl_new:N \l__csl_prefix_tl
\tl_new:N \l__csl_suffix_tl
\clist_new:N \l__csl_keys_clist
\tl_new:N \l__csl_normalized_keys_tl

\cs_new:Npn \csl_cite_normalize:nnn #1#2#3
  {
    \tl_set:Nn \l__csl_prefix_tl { #1 }
    \tl_if_empty:NF \l__csl_prefix_tl
      { \tl_put_right:NV \l__csl_prefix_tl \l__csl_prefix_separator_tl }

    \tl_set:Nn \l__csl_suffix_tl { #2 }
    \tl_if_empty:NF \l__csl_suffix_tl
      { \tl_put_left:NV \l__csl_suffix_tl \l__csl_suffix_separator_tl }

    \clist_set:Nn \l__csl_keys_clist { #3 }
    \tl_set:Nx \l__csl_normalized_keys_tl
      { \clist_use:Nn \l__csl_keys_clist { , } }

    \exp_args:NNNV \csl_cite:nnn
      { \l__csl_prefix_tl } { \l__csl_suffix_tl } { \l__csl_normalized_keys_tl }
  }


\tl_new:N \l__csl_citation_tl
\tl_new:N \l__csl_citation_count_tl

\cs_new:Npn \csl_cite:nnn #1#2#3
  {
    \if@filesw
      {
        \immediate \write \@auxout
          { \string \citation { { #1 } { #2 } { #3 } } }
      }
    \fi
    \tl_clear:N \l__csl_citation_tl
    \bool_if:NTF \l__csl_engine_initialized_bool
      {
        \tl_set:Nx \l__csl_citation_tl
          { \lua_now:e { csl.cite("#1",~ "#2",~ "#3") } }
      }
      {
        \int_if_exist:cF { g__csl_citation_count_ #3 _int }
          { \int_gzero_new:c { g__csl_citation_count_ #3 _int } }
        \int_gincr:c { g__csl_citation_count_ #3 _int }
        \tl_set:Nx \l__csl_citation_count_tl
          { \int_use:c { g__csl_citation_count_ #3 _int } }
        \tl_if_exist:cTF
          { g__csl_citation_ #3 _ \l__csl_citation_count_tl _tl }
          {
            \tl_set_eq:Nc \l__csl_citation_tl
              { g__csl_citation_ #3 _ \l__csl_citation_count_tl _tl }
          }
          {
            \tl_set:Nn \l__csl_citation_tl
              { \reset@font [ \textbf { #3 } ] }
            \G@refundefinedtrue
            \msg_warning:nnn { csl } { citation / undefined } { #3 }
          }
      }
    \l__csl_citation_tl
  }

\msg_new:nnn { csl } { citation / undefined }
  {
    Citation~ `#1'~ on~ page~ \thepage \space undefined~ \msg_line_context: .
  }


% Used in aux files to register cite items.
\cs_set:Npn \citation #1
  {
    \sys_if_engine_luatex:T
      { \csl_register_items:nnn #1 }
  }

\cs_new:Npn \csl_register_items:nnn #1#2#3
  { \lua_now:n { csl.register_items("#3") } }


\cs_new:Npn \cslcite #1#2
  {
    \if@filesw
      \immediate \write \@auxout { \string \bibcite { #1 } { #2 } }
    \fi
  }

\tl_new:N \l__csl_bibcite_count_tl
\cs_set:Npn \bibcite #1#2
  {
    \int_if_exist:cF { g__csl_bibcite_count_ #1 _int }
      { \int_gzero_new:c { g__csl_bibcite_count_ #1 _int } }
    \int_gincr:c { g__csl_bibcite_count_ #1 _int }
    \tl_set:Nx \l__csl_bibcite_count_tl
      { \int_use:c { g__csl_bibcite_count_ #1 _int } }
    \tl_gset:cn { g__csl_citation_ #1 _ \l__csl_bibcite_count_tl _tl } { #2 }
  }

\NewDocumentCommand \printbibliography { }
  {
    \sys_if_engine_luatex:TF
      {
        \bool_if:NTF \l__csl_engine_initialized_bool
          { \lua_now:n { csl.bibliography() } }
          { \msg_warning:nnn { csl } { bibliography / empty } }
      }
      {
        \file_if_exist_input:nF { \jobname .bbl }
          { \msg_warning:nnx { csl } { file / non-exist} { \jobname .bbl } }
      }
  }

\msg_new:nnn { csl } { bibliography / empty }
  { The~ bibliography~ is~ empty.  }

\msg_new:nnn { csl } { file / non-exist }
  { No~ file~ #1. }


\tl_new:N \l__csl_style_tl
\clist_new:N \l__csl_bib_files_clist
\tl_new:N \l__csl_prefix_separator_tl
\tl_new:N \l__csl_suffix_separator_tl
\tl_new:N \l__csl_locale_tl
\bool_new:N \l__csl_force_locale_bool

\keys_define:nn { csl }
  {
    style .tl_set:N = \l__csl_style_tl ,
    bib-data .clist_set:N = \l__csl_bib_files_clist ,
    prefix-separator .tl_set:N = \l__csl_prefix_separator_tl ,
    suffix-separator .tl_set:N = \l__csl_suffix_separator_tl ,
    locale .tl_set:N = \l__csl_locale_tl ,
    force-locale .bool_set:N = \l__csl_force_locale_bool ,
  }

\keys_set:nn { csl }
  {
    prefix-separator = \space ,
    suffix-separator = \space ,
  }

\bool_new:N \l__csl_engine_initialized_bool

\prop_set_from_keyval:Nn \l__csl_babel_locale_prop
  {
    acadian         = fr-CA,
    american        = en-US,
    australian      = en-AU,
    afrikaans       = af-ZA,
    albanian        = sq-AL,
    amharic         = am-ET,
    arabic          = ar,
    armenian        = hy-AM,
    asturian        = ast-ES,
    austrian        = de-AT,
    bahasa          = id-ID,
    bahasai         = id-ID,
    bahasam         = id-ID,
    basque          = eu-ES,
    bengali         = bn-BD,
    bgreek          = el-GR,
    brazil          = pt-BR,
    brazilian       = pt-BR,
    breton          = br-FR,
    british         = en-GB,
    bulgarian       = bg-BG,
    canadian        = en-CA,
    canadien        = fr-CA,
    catalan         = ca-AD,
    coptic          = cop,
    croatian        = hr-HR,
    czech           = cs-CZ,
    danish          = da-DK,
    divehi          = dv-MV,
    dutch           = nl-NL,
    english         = en-US,
    esperanto       = eo-001,
    estonian        = et-EE,
    ethiopia        = am-ET,
    farsi           = fa-IR,
    finnish         = fi-FI,
    francais        = fr-FR,
    french          = fr-FR,
    frenchle        = fr-FR,
    friulan         = fur-IT,
    galician        = gl-ES,
    german          = de-DE,
    germanb         = de-DE,
    greek           = el-GR,
    hebrew          = he-IL,
    hindi           = hi-IN,
    ibygreek        = el-CY,
    icelandic       = is-IS,
    indon           = id-ID,
    indonesia       = id-ID,
    interlingua     = ia-FR,
    irish           = ga-IE,
    italian         = it-IT,
    japanese        = ja-JP,
    kannada         = kn-IN,
    lao             = lo-LA,
    latin           = la-Latn,
    latvian         = lv-LV,
    lithuanian      = lt-LT,
    lowersorbian    = dsb-DE,
    lsorbian        = dsb-DE,
    magyar          = hu-HU,
    malay           = id-ID,
    malayalam       = ml-IN,
    marathi         = mr-IN,
    meyalu          = id-ID,
    mongolian       = mn-Cyrl,
    naustrian       = de-AT,
    newzealand      = en-NZ,
    ngerman         = de-DE,
    nko             = ha-NG,
    norsk           = nb-NO,
    norwegian       = nn-NO,
    nynorsk         = nn-NO,
    occitan         = oc-FR,
    piedmontese     = pms-IT,
    pinyin          = pny,
    polish          = pl-PL,
    polutonikogreek = el-GR,
    portuges        = pt-PT,
    portuguese      = pt-PT,
    romanian        = ro-RO,
    romansh         = rm-CH,
    russian         = ru-RU,
    samin           = se-NO,
    sanskrit        = sa-IN,
    scottish        = gd-GB,
    serbian         = sr-Latn,
    serbianc        = sr-Cyrl,
    slovak          = sk-SK,
    slovene         = sl-SI,
    slovenian       = sl-SI,
    spanish         = es-ES,
    swedish         = sv-SE,
    swiss           = de-CH,
    swissgerman     = de-CH,
    nswissgerman    = de-CH,
    syriac          = syc,
    tamil           = ta-IN,
    telugu          = te-IN,
    thai            = th-TH,
    thaicjk         = th-TH,
    tibetan         = bo-CN,
    turkish         = tr-TR,
    turkmen         = tk-TM,
    ukrainian       = uk-UA,
    urdu            = ur-IN,
    UKenglish       = en-UK,
    uppersorbian    = hsb-DE,
    USenglish       = en-US,
    usorbian        = hsb-DE,
    vietnamese      = vi-VN,
    welsh           = cy-GB,
  }

\AtBeginDocument
  {
    \tl_if_empty:NTF \l__csl_style_tl
      { \tl_set_eq:NN \l__csl_style_tl \g__csl_aux_bibstyle_tl }
      { \exp_args:Nx \csl_write_aux_bibstyle:n { \l__csl_style_tl } }
    \clist_if_empty:NTF \l__csl_bib_files_clist
      { \clist_set_eq:NN \l__csl_bib_files_clist \g__csl_aux_bib_files_clist }
      {
        \exp_args:Nx \csl_write_aux_bibdata:n
          { \clist_use:Nn \l__csl_bib_files_clist { , } }
      }
    \tl_if_empty:NT \l__csl_locale_tl
      {
        \tl_if_exist:NT \bbl@main@language
          {
            \prop_get:NVN \l__csl_babel_locale_prop \bbl@main@language
              \l__csl_locale_tl
          }
      }
    \tl_if_empty:NF \l__csl_locale_tl
      {
        \if@filesw
          \immediate \write \@auxout
            {
              \string \csloptions
                {
                  locale = \l__csl_locale_tl,
                  force-locale =
                    \bool_if:NTF \l__csl_force_locale_bool
                      { true }
                      { false },
                }
            }
        \fi
      }
    \sys_if_engine_luatex:T
      {
        \lua_now:e
          {
            csl.init(
              "\l__csl_style_tl",
              "\l__csl_bib_files_clist",
              "\l__csl_locale_tl",
              \bool_if:NTF \l__csl_force_locale_bool
                { true }
                { false }
            )
          }
        \str_if_eq:eeT { \lua_now:n { tex.print(csl.initialized) } } { true }
          { \bool_set_true:N \l__csl_engine_initialized_bool }
      }
  }

\cs_new:Npn \csl_write_aux_bibstyle:n #1
  {
    \if@filesw
      % \iow_now:Nx \@auxout { \bibstyle { #1 } }
      \immediate \write \@auxout { \string \bibstyle { #1 } }
    \fi
  }


\DeclareDocumentCommand \bibliographystyle { m }
  {
    \ifx \@begindocumenthook \@undefined
      \csl_write_aux_bibstyle:n { #1 }
    \fi
    \tl_set:Nn \l__csl_style_tl { #1 }
  }

\tl_new:N \g__csl_aux_bibstyle_tl
\cs_set:Npn \bibstyle #1
  { \tl_gset:Nn \g__csl_aux_bibstyle_tl { #1 } }

% Setting bib resource
\NewDocumentCommand \addbibresource { m }
  {
    \clist_put_right:Nn \l__csl_bib_files_clist { #1 }
  }

\clist_new:N \g__csl_aux_bib_files_clist
\cs_set:Npn \bibdata #1
  { \clist_gput_right:Nn \g__csl_aux_bib_files_clist { #1 } }


\DeclareDocumentCommand \bibliography { m }
  {
    \csl_write_aux_bibdata:n { #1 }
    \printbibliography
  }

\cs_new:Npn \csl_write_aux_bibdata:n #1
  {
    \if@filesw
      \immediate \write \@auxout
        { \string \bibdata { \zap@space #1~ \@empty } }
    \fi
  }

% For numeric or label-style bibliography
% \def\@lbibitem[#1]#2{\item[\@biblabel{#1}\hfill]\if@filesw
%       {\let\protect\noexpand
%        \immediate
%        \write\@auxout{\string\bibcite{#2}{#1}}}\fi\ignorespaces}
\cs_set:Npn \@lbibitem [#1]#2
  { \item [ \@biblabel { #1 } \hfill ] \ignorespaces }

% For author-date bibliography
% \def\@bibitem#1{\item\if@filesw \immediate\write\@auxout
%        {\string\bibcite{#1}{\the\value{\@listctr}}}\fi\ignorespaces}
\cs_set:Npn \@bibitem #1
  { \item [ ] \ignorespaces }

% CSL outputs the whole label thus the brackets are removed from \@biblabel
% \def\@biblabel#1{[#1]}
\cs_set:Npn \@biblabel #1 { #1 }

\endinput
