category       success failure   error pending
-------------- ------- ------- ------- -------
affix                3       5       1       0
bugreports          13      17      52       0
collapse             0      20       1       0
condition            5      12       0       0
date                79      14       8       0
decorations          5       2       0       0
disambiguate        10      43      18       0
display              0       0       5       0
etal                 0       2       2       0
flipflop             9       9       1       0
form                 3       0       0       0
fullstyles           0       0       5       0
group                1       3       3       0
integration          4      10       0       0
label                4      12       3       0
locale              19       4       0       0
locator              2       4       0       0
magic               24      11       5       0
name                54      47      10       0
nameattr            97       0       0       0
nameorder            6       0       0       0
namespaces           1       0       0       0
number              12       7       1       0
page                 9       0       0       0
plural               0       7       0       0
position             2      11       3       0
punctuation          3      10       3       0
quotes               2       0       2       0
simplespace          0       0       1       0
sort                 5      11      50       0
sortseparator        1       0       0       0
substitute           2       1       4       0
testers              0       0       2       0
textcase            24       5       1       0
unicode              1       0       0       0
variables            2       1       2       0
virtual              1       0       0       0
-------------- ------- ------- ------- -------
(all)              403     268     183       0

Failure → citeproc test test-suite affix_CommaAfterQuote.txt
Passed in:
(string) '“quote,” Hello Thing'
Expected:
(string) '“quote”, Hello Thing'

Failure → citeproc test test-suite affix_InterveningEmpty.txt
Passed in:
(string) 'John DoeHis Anonymous Life1965.'
Expected:
(string) 'John Doe. His Anonymous Life. 1965.'

Failure → citeproc test test-suite affix_PrefixFullCitationTextOnly.txt
Passed in:
(string) 'As written in (Smith 2000)'
Expected:
(string) '(As written in Smith 2000)'

Failure → citeproc test test-suite affix_PrefixWithDecorations.txt
Passed in:
(string) '<span style="font-variant:small-caps;">See</span> (Smith 2000)'
Expected:
(string) '(<span style="font-variant:small-caps;">See</span> Smith 2000)'

Failure → citeproc test test-suite affix_TextNodeWithMacro.txt
Passed in:
(string) 'OneTwo.'
Expected:
(string) 'One. Two.'

Failure → citeproc test test-suite bugreports_ApostropheOnParticle.txt
Passed in:
(string) 'John d' Jones'
Expected:
(string) 'John d’Jones'

Failure → citeproc test test-suite bugreports_AsaSpacing.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">“His Anonymous Chapter” Some text string</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">“His Anonymous Chapter.” Some text string</div>
</div>'

Failure → citeproc test test-suite bugreports_BadCitationUpdate.txt
Passed in:
(string) 'C. Grignon, C. Sentenac 2000
C. Grignon, C. Sentenac 2000'
Expected:
(string) 'C. Grignon, C. Sentenac 2000a
C. Grignon, C. Sentenac 2000b'

Failure → citeproc test test-suite bugreports_ChineseCharactersFamilyOnlyPluralLabel.txt
Passed in:
(string) '编者'
Expected:
(string) '编者ed.'

Failure → citeproc test test-suite bugreports_CitationSortsWithEtAl.txt
Passed in:
(string) '[Aalto et al., n.d.]; [Aalto et al., n.d.]; [Aalto et al., n.d.]'
Expected:
(string) '[<i>Aalto et al.</i>, 1999, 2000, 2001]'

Failure → citeproc test test-suite bugreports_DelimiterOnLayout.txt
Passed in:
(string) '>>[0] (fig.)(z)(fig.)'
Expected:
(string) '>>[0] (fig.1(z)fig.2)'

Failure → citeproc test test-suite bugreports_DelimitersOnLocator.txt
Passed in:
(string) '[, 32]; [, 32]; [, 32]'
Expected:
(string) '[1, 32; 2, 32; 3, 32]'

Failure → citeproc test test-suite bugreports_EmptyIfMatchNoneFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'PhD. diss.'

Failure → citeproc test test-suite bugreports_EnvAndUrb.txt
Passed in:
(string) '..[0] Baines, T S, O Benedettini and J M Kay, ‘Title One.’; Baines, T S, F Gump and J M Kay, ‘Title Two.’
..[1] Baines, T S, O Benedettini and J M Kay, ‘Title One.’
>>[2] Baines, T S, F Gump and J M Kay, ‘Title Two.’'
Expected:
(string) '>>[0] Baines, T S, O Benedettini and J M Kay, ‘Title One’; Baines, T S, F Gump and J M Kay, ‘Title Two’.
..[1] See reference 1, Baines et al.
>>[2] See reference 1, Baines et al.'

Failure → citeproc test test-suite bugreports_EtAlSubsequent.txt
Passed in:
(string) '..[0] John Doe, Jane Roe, Katie Harper, Emmanuel Clutterbuck
>>[1] John Doe, Jane Roe, Katie Harper, Emmanuel Clutterbuck'
Expected:
(string) '..[0] John Doe, Jane Roe, Katie Harper, Emmanuel Clutterbuck
>>[1] John Doe et al.'

Failure → citeproc test test-suite bugreports_FrenchApostrophe.txt
Passed in:
(string) '« Life‘s ’Little’ Surprises »'
Expected:
(string) '« Life’s “Little” Surprises »'

Failure → citeproc test test-suite bugreports_LegislationCrash.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">23 mars 1992</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><i>Arrêté du 23 mars 1992 relatif au programme des études conduisant au diplôme d’État d’infirmier</i>, 1992. </div>
</div>'

Failure → citeproc test test-suite bugreports_NumberInMacroWithVerticalAlign.txt
Passed in:
(string) '<i>2</i>; <i>3-5</i>'
Expected:
(string) '<sup><i>2</i></sup>; <sup><i>3–5</i></sup>'

Failure → citeproc test test-suite bugreports_SingletonIfMatchNoneFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'PhD. diss.'

Failure → citeproc test test-suite bugreports_UndefinedInName3.txt
Passed in:
(string) 'B-X Kim and A-Y Kim, , in , , , ,  ( , , ), p. .
B-X Kim and A-Y Kim, , in , , , ,  ( , , ), p. .'
Expected:
(string) 'B-X Kim and A-Y Kim.
Kim and Kim, 23.'

Failure → citeproc test test-suite bugreports_UnisaHarvardInitialization.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Doe, JQn.d.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Doe, JQ n.d., </div>
</div>'

Failure → citeproc test test-suite bugreports_parseName.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">“van Happel,” Eduard 2008</div>
  <div class="csl-entry">von Hoppel, Gustav 2008</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">van Happel, Eduard 2008</div>
  <div class="csl-entry">Hoppel, Gustav von 2008</div>
</div>'

Failure → citeproc test test-suite collapse_AuthorCollapse.txt
Passed in:
(string) '(Smith 1900), (Smith 2000)'
Expected:
(string) '(Smith 1900, 2000)'

Failure → citeproc test test-suite collapse_AuthorCollapseDifferentAuthorsOneWithEtAl.txt
Passed in:
(string) '(Smith 1900), (Smith et al. 2000)'
Expected:
(string) '(Smith 1900, Smith et al. 2000)'

Failure → citeproc test test-suite collapse_AuthorCollapseNoDate.txt
Passed in:
(string) '(Smith), (Smith 1900), (Smith 2000)'
Expected:
(string) '(Smith, 1900, 2000)'

Failure → citeproc test test-suite collapse_AuthorCollapseNoDateSorted.txt
Passed in:
(string) '(Smith 325AD), (Smith 2000), (Smith)'
Expected:
(string) '(Smith 325AD, 2000)'

Failure → citeproc test test-suite collapse_CitationNumberRangesInsert.txt
Passed in:
(string) '..[0] [CSL STYLE ERROR: reference with no printed form.]
>>[1] , , , '
Expected:
(string) '..[0] [1]
>>[1] [1]–[4]'

Failure → citeproc test test-suite collapse_CitationNumberRangesMixed.txt
Passed in:
(string) '(), (), (), (), (), (), ()
(), (), (), (), (), ()'
Expected:
(string) '([1]–[7])
([1]–[3], [5]–[7])'

Failure → citeproc test test-suite collapse_CitationNumberRangesMixed2.txt
Passed in:
(string) '(), (), (), (), (), (), (), (), (), (), ()
(), (), (), (), (), (), (), ()'
Expected:
(string) '([1]–[11])
([1], [3]–[5], [7], [9]–[11])'

Failure → citeproc test test-suite collapse_CitationNumberRangesMixed3.txt
Passed in:
(string) '(), (), (), (), (), (), (), ()
(), (), (), (), ()'
Expected:
(string) '([1]–[8])
([1], [4], [6]–[8])'

Failure → citeproc test test-suite collapse_CitationNumberRangesOneOnly.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">[1].</div>
</div>'

Failure → citeproc test test-suite collapse_CitationNumberRangesWithAffixes.txt
Passed in:
(string) '<b>()</b>,<b>()</b>,<b>()</b>'
Expected:
(string) '<b>([1]–[3])</b>'

Failure → citeproc test test-suite collapse_CitationNumberRangesWithAffixesGrouped.txt
Passed in:
(string) '<b>()</b>,<b>()</b>,<b>()</b>'
Expected:
(string) '<b>([1]–[3])</b>'

Failure → citeproc test test-suite collapse_CitationNumberRangesWithAffixesGroupedLocator.txt
Passed in:
(string) '<b>()</b>,<b>([ 23])</b>,<b>()</b>'
Expected:
(string) '<b>([1],[2, p. 23],[3])</b>'

Failure → citeproc test test-suite collapse_CitationNumberRangesWithAffixesNoCollapse.txt
Passed in:
(string) '<b>()</b>,<b>()</b>,<b>()</b>'
Expected:
(string) '<b>([1],[2],[3])</b>'

Failure → citeproc test test-suite collapse_NumericDuplicate.txt
Passed in:
(string) '(),(),(),(),()'
Expected:
(string) '(1,2,2–4)'

Failure → citeproc test test-suite collapse_NumericDuplicate2.txt
Passed in:
(string) '(),(),(),(),(),()'
Expected:
(string) '(1–3,3–5)'

Failure → citeproc test test-suite collapse_TrailingDelimiter.txt
Passed in:
(string) '(Condit et al. 2000), (Condit et al. 1995), (Connell 1971), (Condit et al. 1998), (Cortes &#38; Hunziker 1971)'
Expected:
(string) '(Condit et al. 2000, 1995, 1998; Connell 1971, Cortes &#38; Hunziker 1971)'

Failure → citeproc test test-suite collapse_YearSuffixCollapse.txt
Passed in:
(string) 'Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2001
Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2001'
Expected:
(string) 'Smith 2000a–e, 2001
Smith 2000a,c–e, 2001'

Failure → citeproc test test-suite collapse_YearSuffixCollapseNoRange.txt
Passed in:
(string) 'Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2001
Smith 2000, Smith 2000, Smith 2000, Smith 2000, Smith 2001'
Expected:
(string) 'Smith 2000a,b,c,d,e, 2001
Smith 2000a,c,d,e, 2001'

Failure → citeproc test test-suite collapse_YearSuffixCollapseNoYearSuffixDelimiter.txt
Passed in:
(string) 'Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2001
Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2001'
Expected:
(string) 'Smith 2000a–e;2001
Smith 2000a;c–e;2001'

Failure → citeproc test test-suite collapse_YearSuffixImplicitCollapseNoYearSuffixDelimiter.txt
Passed in:
(string) 'Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2001
Smith 2000;Smith 2000;Smith 2000;Smith 2000;Smith 2001'
Expected:
(string) 'Smith 2000a–e;2001
Smith 2000a;c–e;2001'

Failure → citeproc test test-suite condition_EmptyDate.txt
Passed in:
(string) 'No date here
No date here'
Expected:
(string) 'No date here
Have date, will travel'

Failure → citeproc test test-suite condition_LocatorIsFalse.txt
Passed in:
(string) 'Book One: (1) Locator false (2) Locator false; Book Two: (1) Locator false (2) Locator false'
Expected:
(string) 'Book One: (1) Locator true (2) Locator true; Book Two: (1) Locator false (2) Locator false'

Failure → citeproc test test-suite condition_MatchAll.txt
Passed in:
(string) 'Some Title or Otherviewed1 June 1965'
Expected:
(string) 'Some Title or Other'

Failure → citeproc test test-suite condition_NameAndTextVars.txt
Passed in:
(string) 'should not be this'
Expected:
(string) 'should be this!'

Failure → citeproc test test-suite condition_NumberIsNumeric.txt
Passed in:
(string) 'FALSE'
Expected:
(string) 'TRUE'

Failure → citeproc test test-suite condition_NumeralIsNumeric.txt
Passed in:
(string) 'FALSE'
Expected:
(string) 'TRUE'

Failure → citeproc test test-suite condition_NumeralWithTextIsNumeric.txt
Passed in:
(string) 'FALSE'
Expected:
(string) 'TRUE'

Failure → citeproc test test-suite condition_RefTypeBranching.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Work 1, John Doe, 2000.</div>
  <div class="csl-entry">Work 2, John Doe, 2000.</div>
  <div class="csl-entry">Work 3, John Doe, 2000.</div>
  <div class="csl-entry">Work 4, John Doe, 2000.</div>
  <div class="csl-entry">Work 5, John Doe, 2000.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><i>Work 1</i> (John Doe), 2000.</div>
  <div class="csl-entry">John Doe, 2000. Work 2.</div>
  <div class="csl-entry">2000. Work 3, John Doe.</div>
  <div class="csl-entry">Work 4 (2000), John Doe.</div>
  <div class="csl-entry">Work 5, John Doe, 2000.</div>
</div>'

Failure → citeproc test test-suite condition_SingletonIfMatchNone.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'ed. by Γ. Π. Σαββίδης'

Failure → citeproc test test-suite condition_VariableAll.txt
Passed in:
(string) 'TRUE
TRUE'
Expected:
(string) 'TRUE
FALSE'

Failure → citeproc test test-suite condition_VariableAny.txt
Passed in:
(string) 'TRUE
TRUE'
Expected:
(string) 'TRUE
FALSE'

Failure → citeproc test test-suite condition_VariableNone.txt
Passed in:
(string) 'TRUE
TRUE'
Expected:
(string) 'TRUE
FALSE'

Failure → citeproc test test-suite date_IgnoreNonexistentSort.txt
Passed in:
(string) 'Item 1; Item 2; Item 3; Item 4'
Expected:
(string) 'Item 4; Item 2; Item 1; Item 3'

Failure → citeproc test test-suite date_InPress.txt
Passed in:
(string) '(John Doe (in press)'
Expected:
(string) '(John Doe (in press))'

Failure → citeproc test test-suite date_LopsidedDataYearSuffixCollapse.txt
Passed in:
(string) '(Smith 1982), (Smith 1982)'
Expected:
(string) '(Smith 1982a,b)'

Failure → citeproc test test-suite date_NegativeDateSort.txt
Passed in:
(string) '100BC713, 54AD1013, 44BC315, 68AD611'
Expected:
(string) '100BC-7-13, 44BC-3-15, 54AD-10-13, 68AD-6-11'

Failure → citeproc test test-suite date_NegativeDateSortViaMacro.txt
Passed in:
(string) '100BC713, 54AD1013, 44BC315, 68AD611'
Expected:
(string) '100BC-7-13, 44BC-3-15, 54AD-10-13, 68AD-6-11'

Failure → citeproc test test-suite date_NegativeDateSortViaMacroOnYearMonthOnly.txt
Passed in:
(string) 'BookY 100BC713, BookX 100BC714, BookB 68AD315, BookA 68AD316'
Expected:
(string) 'BookX (100BC-7-14), BookY (100BC-7-13), BookA (68AD-3-16), BookB (68AD-3-15)'

Failure → citeproc test test-suite date_NonexistentSortReverseCitation.txt
Passed in:
(string) 'Item 1; Item 2; Item 3; Item 4'
Expected:
(string) 'Item 2; Item 4; Item 1; Item 3'

Failure → citeproc test test-suite date_RangeDelimiter.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Year, Month, Day, with repeated month and year</div>
  <div class="csl-entry">Year, Month, Day, with differing month</div>
  <div class="csl-entry">Year, Month, Day, with differing year</div>
  <div class="csl-entry">Year, Month, with repeated year</div>
  <div class="csl-entry">Year, Month, with differing year</div>
  <div class="csl-entry">Year, with differing year</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Year, Month, Day, with repeated month and year: 2_[DRD]_4 January 1999</div>
  <div class="csl-entry">Year, Month, Day, with differing month: 2 January_[MRD]_4 March 1999</div>
  <div class="csl-entry">Year, Month, Day, with differing year: 2 January 1999_[YRD]_4 January 2000</div>
  <div class="csl-entry">Year, Month, with repeated year: January_[MRD]_March 1999</div>
  <div class="csl-entry">Year, Month, with differing year: January 1999_[YRD]_March 2000</div>
  <div class="csl-entry">Year, with differing year: 1999_[YRD]_2000</div>
</div>'

Failure → citeproc test test-suite date_SortEmptyDatesCitation.txt
Passed in:
(string) 'BookA.; BookB 2000.; BookC.; BookD 1999.; BookE.'
Expected:
(string) 'BookD 1999; BookB 2000; BookA; BookC; BookE.'

Failure → citeproc test test-suite date_Uncertain.txt
Passed in:
(string) '15 December 2005; 20 December 2005'
Expected:
(string) 'circa 15 December 2005; 20 December 2005'

Failure → citeproc test test-suite date_YearSuffixDelimiter.txt
Passed in:
(string) 'Doe 2000;Doe 2000;Doe 2001'
Expected:
(string) 'Doe 2000a,b;2001'

Failure → citeproc test test-suite date_YearSuffixImplicitWithNoDate.txt
Passed in:
(string) '(John Doe n.d. [Accessed:  June 1, 1965]); (John Doe n.d. [Accessed:  June 1, 2065])'
Expected:
(string) '(John Doe n.d.-a [Accessed: June 1, 1965]; John Doe n.d.-b [Accessed: June 1, 2065])'

Failure → citeproc test test-suite date_YearSuffixImplicitWithNoDateOneOnly.txt
Passed in:
(string) '(John Doe n.d. [Accessed:  June 1, 1965])'
Expected:
(string) '(John Doe n.d. [Accessed: June 1, 1965])'

Failure → citeproc test test-suite date_YearSuffixWithNoDate.txt
Passed in:
(string) '(John Doe n.d. [Accessed:  June 1, 1965]); (John Doe n.d. [Accessed:  June 1, 2065])'
Expected:
(string) '(John Doe n.d.-a [Accessed: June 1, 1965]; John Doe n.d.-b [Accessed: June 1, 2065])'

Failure → citeproc test test-suite decorations_AndTermUnaffectedByNameDecorations.txt
Passed in:
(string) 'John Doe III and Jane van Roe'
Expected:
(string) '<span style="font-variant:small-caps;">John</span> <span style="font-variant:small-caps;">Doe</span> III and <span style="font-variant:small-caps;">Jane</span> <span style="font-variant:small-caps;">van</span> <span style="font-variant:small-caps;">Roe</span>'

Failure → citeproc test test-suite decorations_NoNormalWithoutDecoration.txt
Passed in:
(string) '<span style="font-weight:normal;"><span style="font-style:normal;">His Anonymous Life</span>
<i>His Anonymous Life</i>
<i><span style="font-style:normal;">His Anonymous Life</span></i></span>'
Expected:
(string) 'His Anonymous Life
<i>His Anonymous Life</i>
<i><span style="font-style:normal;">His Anonymous Life</span></i>'

Failure → citeproc test test-suite disambiguate_AddNamesSuccess.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown, et al. (1980); Smith, Beefheart, et al. (1980)'

Failure → citeproc test test-suite disambiguate_AllNamesGenerally.txt
Passed in:
(string) 'Asthma, Bronchitis and Cold (1980); Asthma, Bronchitis and Cold (1995)'
Expected:
(string) 'Asthma, Bosworth Bronchitis and C. Cold (1980); Asthma, Beauregarde Bronchitis and O. Cold (1995)'

Failure → citeproc test test-suite disambiguate_AllNamesSimpleSequence.txt
Passed in:
(string) '(Malone 2001); (Malone 1951)'
Expected:
(string) '(Nolan J. Malone 2001; Kemp Malone 1951)'

Failure → citeproc test test-suite disambiguate_AllNamesWithInitialsGenerally.txt
Passed in:
(string) 'Asthma, Bronchitis and Cold (1980); Asthma, Bronchitis and Cold (1995)'
Expected:
(string) 'Asthma, Bronchitis and C. Cold (1980); Asthma, Bronchitis and O. Cold (1995)'

Failure → citeproc test test-suite disambiguate_AndreaEg1a.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown, et al. (1980); Smith, Brown, et al. (1980)
Smith, Brown, et al. (1980); Smith, Benson, et al. (1980)
Smith, Brown, et al. (1980); Smith, Brown, et al. (1980)'

Failure → citeproc test test-suite disambiguate_AndreaEg1b.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; J. Jones (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Benson, et al. (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; A. Jones (1980)'

Failure → citeproc test test-suite disambiguate_AndreaEg2.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; J. Jones (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Benson, et al. (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; A. Jones (1980)'

Failure → citeproc test test-suite disambiguate_AndreaEg3.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown &#38; J. Jones (1980a); Smith, Brown &#38; J. Jones (1980b)
Smith, Brown &#38; J. Jones (1980a); Smith, Benson, et al. (1980)
Smith, Brown &#38; J. Jones (1980a); Smith, Brown &#38; A. Jones (1980)'

Failure → citeproc test test-suite disambiguate_AndreaEg4.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; J. Jones (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Benson, et al. (1980)
Smith, Brown &#38; J. Jones (1980); Smith, Brown &#38; A. Jones (1980)'

Failure → citeproc test test-suite disambiguate_AndreaEg5.txt
Passed in:
(string) 'Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)
Smith et al. (1980); Smith et al. (1980)'
Expected:
(string) 'Smith, Brown &#38; J. Jones (1980a); Smith, Brown &#38; J. Jones (1980b)
Smith, Brown &#38; J. Jones (1980a); Smith, Benson, et al. (1980)
Smith, Brown &#38; J. Jones (1980a); Smith, Brown &#38; A. Jones (1980)'

Failure → citeproc test test-suite disambiguate_BasedOnEtAlSubsequent.txt
Passed in:
(string) '(Baur, Fröberg, Baur, et al. 2000); (Baur, Schileyko &#38; Baur 2000); (Doe 2000)'
Expected:
(string) '(Baur, Fröberg, Baur, et al. 2000<i>a</i>; Baur, Schileyko &#38; Baur 2000<i>b</i>; Doe 2000)'

Failure → citeproc test test-suite disambiguate_BasedOnSubsequentFormWithBackref2.txt
Passed in:
(string) '..[0] FAILED TO MATCH.; FAILED TO MATCH.
..[1] FAILED TO MATCH.
..[2] FAILED TO MATCH.
..[3] FAILED TO MATCH.
>>[4] FAILED TO MATCH.'
Expected:
(string) '..[0] John Doe, His Book (2000); John Doe, His Other Book (2001).
..[1] Jane Roe, Her Book (1998).
..[2] Roe, supra note 2.
..[3] Doe, His Book, supra note 1.
>>[4] Roe, supra note 2.'

Failure → citeproc test test-suite disambiguate_ByCiteBaseNameCountOnFailureIfYearSuffixAvailable.txt
Passed in:
(string) 'Asthma et al. (1990); Asthma et al. (1990); Dropsy et al. (2000); Dropsy et al. (2000)'
Expected:
(string) 'Asthma, Bosworth Bronchitis, et al. (1990); Asthma, Beauregarde Bronchitis, et al. (1990); Dropsy, Edward Enteritis, et al. (2000); Dropsy, Ernie Enteritis, et al. (2000)'

Failure → citeproc test test-suite disambiguate_ByCiteDisambiguateCondition.txt
Passed in:
(string) 'Doe et al. (2000); Doe et al. (2000)'
Expected:
(string) 'Doe et al., <i>Book A</i> (2000); Doe et al., <i>Book B</i> (2000)'

Failure → citeproc test test-suite disambiguate_ByCiteGivennameExpandCrossNestedNames.txt
Passed in:
(string) 'J. Doe et al.; J. Doe et al.; J. Doe et al.'
Expected:
(string) 'J. Doe, Jane Roe, Robert Jones; J. Doe, Josephine Roe, et al.; J. Doe, Jane Roe, Richard Jones'

Failure → citeproc test test-suite disambiguate_ByCiteGivennameNoShortFormInitializeWith.txt
Passed in:
(string) 'J Roe
J Doe; J Doe'
Expected:
(string) 'J Roe
John Doe; Jack Doe'

Failure → citeproc test test-suite disambiguate_ByCiteGivennameShortFormInitializeWith.txt
Passed in:
(string) 'Roe
Doe; Doe
Smith; Smith'
Expected:
(string) 'Roe
J Doe; A Doe
Thomas Smith; Ted Smith'

Failure → citeproc test test-suite disambiguate_ByCiteGivennameShortFormNoInitializeWith.txt
Passed in:
(string) 'Roe
Doe; Doe'
Expected:
(string) 'Roe
John Doe; Aloysius Doe'

Failure → citeproc test test-suite disambiguate_ByCiteRetainNamesOnFailureIfYearSuffixNotAvailable.txt
Passed in:
(string) 'Asthma et al. (1990); Asthma et al. (1990); Dropsy et al. (2000); Dropsy et al. (2000)'
Expected:
(string) 'Asthma, Bosworth Bronchitis, et al. (1990); Asthma, Beauregarde Bronchitis, et al. (1990); Dropsy, Edward Enteritis, et al. (2000); Dropsy, Ernie Enteritis, et al. (2000)'

Failure → citeproc test test-suite disambiguate_CitationLabelDefault.txt
Passed in:
(string) '; ; '
Expected:
(string) 'Asth00a; Asth00b; Bron00'

Failure → citeproc test test-suite disambiguate_CitationLabelInData.txt
Passed in:
(string) 'SpiffLabel1900; SpiffLabel1900; ; ; '
Expected:
(string) 'SpiffLabel1900a; SpiffLabel1900b; Bron00; BrCh98; DEFG26'

Failure → citeproc test test-suite disambiguate_DisambiguateTrueReflectedInBibliography.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Smith</div>
  <div class="csl-entry">Smith</div>
  <div class="csl-entry">Brown</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Smith, Book One</div>
  <div class="csl-entry">Smith, Book Two</div>
  <div class="csl-entry">Brown</div>
</div>'

Failure → citeproc test test-suite disambiguate_DisambiguateWithThree.txt
Passed in:
(string) '(Aalto)
(Aalto)
(Aalto)'
Expected:
(string) '(Aalto, <i>Book A</i>)
(Aalto, <i>Book B</i>)
(Aalto, <i>Book C</i>)'

Failure → citeproc test test-suite disambiguate_DisambiguateWithThree2.txt
Passed in:
(string) '(Spivak)
(Spivak)
(Spivak)'
Expected:
(string) '(Spivak, <i>A Critique</i>)
(Spivak, “Cultural Talks”)
(Spivak, <i>Death of a Discipline</i>)'

Failure → citeproc test test-suite disambiguate_DisambiguationHang.txt
Passed in:
(string) '..[0] (Caminiti, Johnson, Burnod, Galli, &#38; Ferraina 1990)
..[1] (Caminiti, Johnson, Burnod, Galli, &#38; Ferraina 1990)
>>[2] (Caminiti, Johnson, &#38; Urbano 1990)'
Expected:
(string) '>>[0] (Caminiti, Johnson, Burnod, Galli, &#38; Ferraina 1990a)
>>[1] (Caminiti, Johnson, Burnod, Galli, &#38; Ferraina 1990b)
>>[2] (Caminiti, Johnson, &#38; Urbano 1990)'

Failure → citeproc test test-suite disambiguate_ExtraTextCitation.txt
Passed in:
(string) 'Bumke
Bumke'
Expected:
(string) 'Bumke, Courtly Culture: Literature and Society in the High Middle Ages
Bumke, Höfische'

Failure → citeproc test test-suite disambiguate_ImplicitYearSuffixOnceOnly.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">[1990] Doe, Book A 05/30/1990</div>
  <div class="csl-entry">[1990] Doe, Book B 05/30/1990</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">[1990a] Doe, Book A 05/30/1990</div>
  <div class="csl-entry">[1990b] Doe, Book B 05/30/1990</div>
</div>'

Failure → citeproc test test-suite disambiguate_IncrementalExtraText.txt
Passed in:
(string) 'Yost Trisk
John Smith
John Smith
John Smith
John Smith'
Expected:
(string) 'Yost Trisk
John Smith, Book One
John Smith, Book Two
John Smith, Complete Works, ed. 5
John Smith, Complete Works, ed. 6'

Failure → citeproc test test-suite disambiguate_LastOnlyFailWithByCite.txt
Passed in:
(string) 'Organisation 2010
Organisation 2010'
Expected:
(string) 'Organisation 2010a
Organisation 2010b'

Failure → citeproc test test-suite disambiguate_NoTextElementUsesYearSuffixVariable.txt
Passed in:
(string) 'Doe (2000); Doe (2000)'
Expected:
(string) 'Doe (2000a); Doe (2000b)'

Failure → citeproc test test-suite disambiguate_PrimaryNameGenerally.txt
Passed in:
(string) 'Asthma and Bronchitis (1980); Asthma and Bronchitis (1995)'
Expected:
(string) 'Aloysius Asthma and Bronchitis (1980); Artemis Asthma and Bronchitis (1995)'

Failure → citeproc test test-suite disambiguate_PrimaryNameWithInitialsLimitedToPrimary.txt
Passed in:
(string) 'Asthma et al. (1980); Asthma et al. (1995); Dropsy and Asthma (1995)'
Expected:
(string) 'A. Asthma et al. (1980); G. Asthma et al. (1995); Dropsy and Asthma (1995)'

Failure → citeproc test test-suite disambiguate_PrimaryNameWithNonDroppingParticle.txt
Passed in:
(string) '(dos Santos et al. 2016); (Santos et al. 2020)'
Expected:
(string) '(dos Santos et al. 2016; Santos et al. 2020)'

Failure → citeproc test test-suite disambiguate_ToInitialOnly.txt
Passed in:
(string) 'Smith; Smith; Muggins; Muggins'
Expected:
(string) 'Smith; Smith; B. Muggins; J. Muggins'

Failure → citeproc test test-suite disambiguate_Trigraph.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]
[CSL STYLE ERROR: reference with no printed form.]
[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'Aalt02a
Aalt02b
Aalt02c'

Failure → citeproc test test-suite disambiguate_YearCollapseWithInstitution.txt
Passed in:
(string) '(Smith Co 2000); (Smith Co 2000); (Smith Co 2000)
(Smith Co 2000)
(Smith Co 2000)'
Expected:
(string) '(Smith Co 2000a; 2000b; 2000c)
(Smith Co 2000b)
(Smith Co 2000c)'

Failure → citeproc test test-suite disambiguate_YearSuffixAtTwoLevels.txt
Passed in:
(string) 'Smith et al. (1986); Smith et al. (1986); Smith et al. (1986); Smith et al. (1986)'
Expected:
(string) 'Smith, Jones &#38; Brown (1986a); Smith, Jones &#38; Brown (1986b); Smith, Jones, Brown, et al. (1986a); Smith, Jones, Brown, et al. (1986b)'

Failure → citeproc test test-suite disambiguate_YearSuffixFiftyTwoEntries.txt
Passed in:
(string) '..[0] (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986)
>>[1] (Smith 1986)'
Expected:
(string) '..[0] (Smith 1986a; Smith 1986b; Smith 1986c; Smith 1986d; Smith 1986e; Smith 1986f; Smith 1986g; Smith 1986h; Smith 1986i; Smith 1986j; Smith 1986k; Smith 1986l; Smith 1986m; Smith 1986n; Smith 1986o; Smith 1986p; Smith 1986q; Smith 1986r; Smith 1986s; Smith 1986t; Smith 1986u; Smith 1986v; Smith 1986w; Smith 1986x; Smith 1986y; Smith 1986z; Smith 1986aa; Smith 1986ab; Smith 1986ac; Smith 1986ad; Smith 1986ae; Smith 1986af; Smith 1986ag; Smith 1986ah; Smith 1986ai; Smith 1986aj; Smith 1986ak; Smith 1986al; Smith 1986am; Smith 1986an; Smith 1986ao; Smith 1986ap; Smith 1986aq; Smith 1986ar; Smith 1986as; Smith 1986at; Smith 1986au; Smith 1986av; Smith 1986aw; Smith 1986ax; Smith 1986ay)
>>[1] (Smith 1986az)'

Failure → citeproc test test-suite disambiguate_YearSuffixFiftyTwoEntriesByCite.txt
Passed in:
(string) '..[0] (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986); (Smith 1986)
>>[1] (Smith 1986)'
Expected:
(string) '..[0] (Smith 1986a; Smith 1986b; Smith 1986c; Smith 1986d; Smith 1986e; Smith 1986f; Smith 1986g; Smith 1986h; Smith 1986i; Smith 1986j; Smith 1986k; Smith 1986l; Smith 1986m; Smith 1986n; Smith 1986o; Smith 1986p; Smith 1986q; Smith 1986r; Smith 1986s; Smith 1986t; Smith 1986u; Smith 1986v; Smith 1986w; Smith 1986x; Smith 1986y; Smith 1986z; Smith 1986aa; Smith 1986ab; Smith 1986ac; Smith 1986ad; Smith 1986ae; Smith 1986af; Smith 1986ag; Smith 1986ah; Smith 1986ai; Smith 1986aj; Smith 1986ak; Smith 1986al; Smith 1986am; Smith 1986an; Smith 1986ao; Smith 1986ap; Smith 1986aq; Smith 1986ar; Smith 1986as; Smith 1986at; Smith 1986au; Smith 1986av; Smith 1986aw; Smith 1986ax; Smith 1986ay)
>>[1] (Smith 1986az)'

Failure → citeproc test test-suite disambiguate_YearSuffixMacroSameYearExplicit.txt
Passed in:
(string) 'Smith 2001
Smith 2001'
Expected:
(string) 'A Smith 2001
B Smith 2001'

Failure → citeproc test test-suite disambiguate_YearSuffixMacroSameYearImplicit.txt
Passed in:
(string) 'Smith 2001
Smith 2001'
Expected:
(string) 'A Smith 2001
B Smith 2001'

Failure → citeproc test test-suite disambiguate_YearSuffixMixedDates.txt
Passed in:
(string) '(A Ylinen, 1995); (A Ylinen, 1995); (A Ylinen, 1995)'
Expected:
(string) '(A Ylinen, 1995a; b; c)'

Failure → citeproc test test-suite disambiguate_YearSuffixWithEtAlSubequent.txt
Passed in:
(string) '(Smith 2000); (Smith 2000); (Smith 2000)
(Smith 2000)
(Smith 2000)'
Expected:
(string) '(Smith 2000a; 2000b; 2000c)
(Smith 2000b)
(Smith 2000c)'

Failure → citeproc test test-suite etal_ShortFormOfName.txt
Passed in:
(string) 'Doe et al.'
Expected:
(string) 'Doe <i>et al.</i>'

Failure → citeproc test test-suite etal_UseZeroFirst.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"> et al. // John Doe et al.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Doe et al.</div>
</div>'

Failure → citeproc test test-suite flipflop_ApostropheInsideTag.txt
Passed in:
(string) 'l''''
Expected:
(string) 'l’’’'

Failure → citeproc test test-suite flipflop_ItalicsWithOk.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><i>Lessard v. Schmidt</i>. 1972. 349 F. Supp. 1078 (E.D. Wisc.).</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><i>Lessard <span style="font-style:normal;">v.</span> Schmidt</i>. 1972. 349 F. Supp. 1078 (E.D. Wisc.).</div>
</div>'

Failure → citeproc test test-suite flipflop_ItalicsWithOkAndTextcase.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><span style="font-variant:small-caps;">Lessard v. Schmidt</span>. 1972. 349 F. Supp. 1078 (E.D. Wisc.).</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><span style="font-variant:small-caps;">Lessard <span style="font-variant:normal;">v.</span> Schmidt</span>. 1972. 349 F. Supp. 1078 (E.D. Wisc.).</div>
</div>'

Failure → citeproc test test-suite flipflop_LeadingMarkupWithApostrophe.txt
Passed in:
(string) '<i>Insha’Allah</i> is an Arabic phrase meaning “God willing.” Another Arabic word is <i>bukra</i>. Aalto'
Expected:
(string) '<i>Insha’Allah</i> is an Arabic phrase meaning ‘God willing’. Another Arabic word is <i>bukra</i>. Aalto'

Failure → citeproc test test-suite flipflop_NumericField.txt
Passed in:
(string) '1<sup>er</sup>'
Expected:
(string) '1&#60;sup&#62;er&#60;/sup&#62;'

Failure → citeproc test test-suite flipflop_OrphanQuote.txt
Passed in:
(string) 'Nation of “Positive Obligations ” of State under the European Convention on Human Rights (1)'
Expected:
(string) 'Nation of "Positive Obligations " of State under the European Convention on Human Rights (1)'

Failure → citeproc test test-suite flipflop_QuotesNodeLevelMarkup.txt
Passed in:
(string) 'Speak, “friend” of mine on this day, March 15, 1973, and enter.'
Expected:
(string) '“Speak, ‘friend’ of mine on this day, March 15, 1973, and enter.”'

Failure → citeproc test test-suite flipflop_SingleBeforeColon.txt
Passed in:
(string) '“Nobody Knows You’Re a Dog”: As Iconic Internet Cartoon Turns 20, Creator Peter Steiner Knows the Joke Rings as Relevant as Ever'
Expected:
(string) '“Nobody Knows You’re a Dog”: As Iconic Internet Cartoon Turns 20, Creator Peter Steiner Knows the Joke Rings as Relevant as Ever'

Failure → citeproc test test-suite flipflop_StartingApostrophe.txt
Passed in:
(string) 'IEEE Conference on Emerging Technologies and Factory Automation (ETFA '09)'
Expected:
(string) 'IEEE Conference on Emerging Technologies and Factory Automation (ETFA ’09)'

Failure → citeproc test test-suite group_SuppressTermInMacro.txt
Passed in:
(string) 'His Anonymous Life, '
Expected:
(string) 'His Anonymous Life'

Failure → citeproc test test-suite group_SuppressTermWhenNoOutputFromPartialDate.txt
Passed in:
(string) 'Only this (and not this)'
Expected:
(string) 'Only this'

Failure → citeproc test test-suite group_SuppressValueWithEmptySubgroup.txt
Passed in:
(string) 'His Anonymous Life,  Disponible sur : &#60;  &#62;'
Expected:
(string) 'His Anonymous Life'

Failure → citeproc test test-suite integration_CitationSort.txt
Passed in:
(string) '(ibid.); (ibid.); (ibid.); (ibid.)'
Expected:
(string) '(Doe; Noakes; Roe; Snoakes)'

Failure → citeproc test test-suite integration_CitationSortTwice.txt
Passed in:
(string) '(Doe); (Roe)
(Noakes); (Snoakes); (Doe); (Roe)'
Expected:
(string) '(Doe; Roe)
(Doe; Noakes; Roe; Snoakes)'

Failure → citeproc test test-suite integration_DeleteName.txt
Passed in:
(string) '>>[0] Doe.; Snoakes.'
Expected:
(string) '>>[0] Doe; Snoakes.'

Failure → citeproc test test-suite integration_FirstReferenceNoteNumberPositionChange.txt
Passed in:
(string) '>>[0] Ibid.
..[1] Ibid.
..[2] Ibid.
..[3] Ibid.
..[4] Ibid.'
Expected:
(string) '>>[0] Snoakes, “Life of Snoakes” (1902).
>>[1] Doe, “Life of Doe” (1901).
>>[2] Roe, “Life of Roe” (1900).
>>[3] Doe, supra note 2.
>>[4] Roe, supra note 3.'

Failure → citeproc test test-suite integration_IbidOnInsert.txt
Passed in:
(string) '..[0] (ibid.)
>>[1] (ibid.)
..[2] (ibid.)
..[3] (ibid.)'
Expected:
(string) '..[0] (Doe p. 12)
>>[1] (Noakes p. 34)
>>[2] (Ibid.)
..[3] (Snoakes p. 45)'

Failure → citeproc test test-suite integration_IbidWithDifferentLocators.txt
Passed in:
(string) '..[0] (huh?)
..[1] (huh?)
..[2] (huh?)
>>[3] (huh?)'
Expected:
(string) '..[0] (Doe p. 12)
..[1] (ibid-with-locator)
..[2] (Roe bk. 20)
>>[3] (ibid-with-locator)'

Failure → citeproc test test-suite integration_SimpleFirstReferenceNoteNumber.txt
Passed in:
(string) '..[0] Ibid.
..[1] Ibid.
..[2] Ibid.
>>[3] Ibid.'
Expected:
(string) '..[0] Doe, “Life of Doe” (1901).
..[1] Roe, “Life of Roe” (1900).
..[2] Doe, supra note 1.
>>[3] Roe, supra note 2.'

Failure → citeproc test test-suite integration_SimpleIbid.txt
Passed in:
(string) '..[0] (huh?); (huh?)
>>[1] (huh?); (huh?); (huh?)'
Expected:
(string) '..[0] (Doe p. 12; Roe p. 23)
>>[1] (Noakes p. 34; ibid.; Snoakes p. 45)'

Failure → citeproc test test-suite integration_SubsequentWhenInterveningFootnote.txt
Passed in:
(string) '..[0] (I am ibid or ibid-with-locator)
>>[1] (I am ibid or ibid-with-locator)'
Expected:
(string) '..[0] (Doe)
>>[1] (I am subsequent)'

Failure → citeproc test test-suite integration_YearSuffixOnOffOn.txt
Passed in:
(string) '>>[0] Smith (1986); Smith (1986); Smith (1986); Smith (1986)'
Expected:
(string) '>>[0] Smith (1986a); Smith (1986b); Smith (1986c); Smith (1986d)'

Failure → citeproc test test-suite label_CollapsedPageNumberPluralDetection.txt
Passed in:
(string) 'His Anonymous Life, 327\-30
His Anonymous Life, 427–430'
Expected:
(string) 'His Anonymous Life, page 327-30
His Anonymous Life, pages 427–430'

Failure → citeproc test test-suite label_CompactNamesAfterFullNames.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'Alan Aalto, editor'

Failure → citeproc test test-suite label_EditorTranslator2.txt
Passed in:
(string) 'Some title, “Hello there.”'
Expected:
(string) 'Some title, “Hello there”.'

Failure → citeproc test test-suite label_EmptyLabelVanish.txt
Passed in:
(string) '[start]( : 22)[end]'
Expected:
(string) '[start](22)[end]'

Failure → citeproc test test-suite label_ImplicitForm.txt
Passed in:
(string) 'John Doe'
Expected:
(string) 'John Doe (editor)'

Failure → citeproc test test-suite label_NoFirstCharCapWithInTextClass.txt
Passed in:
(string) 'N.d.'
Expected:
(string) 'n.d.'

Failure → citeproc test test-suite label_PluralWithAmpersand.txt
Passed in:
(string) '213 &#38; 235'
Expected:
(string) 'pages 213 &#38; 235'

Failure → citeproc test test-suite label_PluralWithAnd.txt
Passed in:
(string) '213 and 235'
Expected:
(string) 'pages 213 and 235'

Failure → citeproc test test-suite label_PluralWithCommaAnd.txt
Passed in:
(string) '213, and 235'
Expected:
(string) 'pages 213, and 235'

Failure → citeproc test test-suite label_PluralWithCommaLocalizedAnd.txt
Passed in:
(string) '213, et 235'
Expected:
(string) 'pages 213, et 235'

Failure → citeproc test test-suite label_PluralWithLocalizedAmpersand.txt
Passed in:
(string) '213 &#38; 235'
Expected:
(string) 'pages 213 AMPERSAND 235'

Failure → citeproc test test-suite label_PluralWithLocalizedAnd.txt
Passed in:
(string) '213 et 235'
Expected:
(string) 'pages 213 et 235'

Failure → citeproc test test-suite locale_EmptyPlusOverrideTerm.txt
Passed in:
(string) 'Sample Title: ()'
Expected:
(string) 'Sample Title: (weird term)'

Failure → citeproc test test-suite locale_ForceEmptyAndOthersTerm.txt
Passed in:
(string) 'John Doe '
Expected:
(string) 'John Doe'

Failure → citeproc test test-suite locale_ForceEmptyEtAlTerm.txt
Passed in:
(string) 'John Doe '
Expected:
(string) 'John Doe'

Failure → citeproc test test-suite locale_NonExistentLocaleDef.txt
Passed in:
(string) 'John Doe + Jane roe'
Expected:
(string) 'John Doe (edxitor) + Jane roe (translator)'

Failure → citeproc test test-suite locator_SimpleLocators.txt
Passed in:
(string) 'Doe, Book A, 2000, 100–103.; Roe, Book B, 2001, 200 - 201.'
Expected:
(string) 'Doe, Book A, 2000, pp. 100–103; Roe, Book B, 2001, chaps. 200–201.'

Failure → citeproc test test-suite locator_SingularEmbeddedLabelAfterPlural.txt
Passed in:
(string) 'Book One, 367-368, fig. 333'
Expected:
(string) 'Book One, pages 367–368, fig. 333'

Failure → citeproc test test-suite locator_TermSelection.txt
Passed in:
(string) 'Book A, 101'
Expected:
(string) 'Book A, fol. 101'

Failure → citeproc test test-suite locator_WorkaroundTestForSubVerbo.txt
Passed in:
(string) 'Book With Opus, 100
Book With Sub Verbo, 200'
Expected:
(string) 'Book With Opus, op. 100
Book With Sub Verbo, 200'

Failure → citeproc test test-suite magic_ImplicitYearSuffixDelimiter.txt
Passed in:
(string) 'John Doe 1965; John Doe 1965'
Expected:
(string) 'John Doe 1965a; b'

Failure → citeproc test test-suite magic_ImplicitYearSuffixExplicitDelimiter.txt
Passed in:
(string) '(1965); (1965)'
Expected:
(string) '(1965a,b)'

Failure → citeproc test test-suite magic_NameSuffixNoComma.txt
Passed in:
(string) 'John, III Doe'
Expected:
(string) 'John Doe III'

Failure → citeproc test test-suite magic_NameSuffixWithComma.txt
Passed in:
(string) 'John,! Jr. Doe'
Expected:
(string) 'John Doe, Jr.'

Failure → citeproc test test-suite magic_PunctuationInQuoteFalse.txt
Passed in:
(string) 'Doe, “Book A,” 1900.'
Expected:
(string) 'Doe, “Book A”, 1900.'

Failure → citeproc test test-suite magic_PunctuationInQuoteFalseSuppressExtra.txt
Passed in:
(string) '“Article A?,” Journal B'
Expected:
(string) '“Article A?”, Journal B'

Failure → citeproc test test-suite magic_SecondFieldAlign.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Smith, Book A (2000)</div>
  <div class="csl-entry">Robert Jones, Book B (2001)</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">
    <div class="csl-left-margin">[1]</div><div class="csl-right-inline">John Smith, Book A (2000)</div>
  </div>
  <div class="csl-entry">
    <div class="csl-left-margin">[2]</div><div class="csl-right-inline">Robert Jones, Book B (2001)</div>
  </div>
</div>'

Failure → citeproc test test-suite magic_SubsequentAuthorSubstitute.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Smith and Jane Roe, Book A (2000)</div>
  <div class="csl-entry">John Smith and Jane Roe, Book B (2001)</div>
  <div class="csl-entry">John Smith, Book C (2002)</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Smith and Jane Roe, Book A (2000)</div>
  <div class="csl-entry">———, Book B (2001)</div>
  <div class="csl-entry">John Smith, Book C (2002)</div>
</div>'

Failure → citeproc test test-suite magic_SubsequentAuthorSubstituteOfTitleField.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Warren Smith (2000)</div>
  <div class="csl-entry">Warren Smith (2001)</div>
  <div class="csl-entry">(2002)</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Warren Smith (2000)</div>
  <div class="csl-entry">----- (2001)</div>
  <div class="csl-entry">Book Y (2002)</div>
</div>'

Failure → citeproc test test-suite magic_SuppressDuplicateVariableRendering.txt
Passed in:
(string) 'Should print this: Book A … and this: Book ABlob'
Expected:
(string) 'Should print this: Book A … and this: Book A … but this only once: Blob'

Failure → citeproc test test-suite magic_TermCapitalizationWithPrefix.txt
Passed in:
(string) '..[0] Ibid.
..[1] See ibid.
..[2] This has been said. Ibid.
>>[3] Ibid.'
Expected:
(string) '..[0] Doe (1965)
..[1] See ibid.
..[2] This has been said. Ibid.
>>[3] Ibid.'

Failure → citeproc test test-suite name_AfterInvertedName.txt
Passed in:
(string) 'Doebuck, Jonathan, et al.; Doe, John, et al.; Doe, John, et al.
Appleby, Aloysius, and Bobby Brown; Appleby, Aloysius, et al.; Appleby, Aloysius, et al.'
Expected:
(string) 'DOEBUCK, Jonathan, et al.; DOE, John, Jane ROE et al.; DOE, John, Janice ROEBUCK et al.
APPLEBY, Aloysius, and Bobby BROWN; APPLEBY, Aloysius, Bobby BROWN and Cecile CREAM; APPLEBY, Aloysius, Bobby BROWN and Enola EVERGREEN'

Failure → citeproc test test-suite name_AuthorCount.txt
Passed in:
(string) 'Count=(3) | Count=(3) | Count=(2) | Count=(1) | Count=(0)'
Expected:
(string) 'Count=(3) | Count=(3) | Count=(2) | Count=(1) | Count=()'

Failure → citeproc test test-suite name_CiteGroupDelimiterWithYearSuffixCollapse.txt
Passed in:
(string) '(Aalto 2015); (Aalto 2015)'
Expected:
(string) '(Aalto 2015a, b)'

Failure → citeproc test test-suite name_CollapseRoleLabels.txt
Passed in:
(string) 'Albert Asthma et al., Albert Asthma et al.'
Expected:
(string) 'Albert Asthma et al. (eds. &#38; trans.)'

Failure → citeproc test test-suite name_Delimiter.txt
Passed in:
(string) 'John Doe; Jane Roe OR  Doe Inc.;  Doe Inc.;  Noakes Inc.'
Expected:
(string) 'John Doe; Jane Roe OR Doe Inc.; Doe Inc.; Noakes Inc.'

Failure → citeproc test test-suite name_DelimiterAfterInverted.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Australian Government Productivity Commission, &#38; New Zealand Productivity Commission</div>
  <div class="csl-entry">Weinstock, R., Leong, G. B., &#38; Silva, J. A.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Australian Government Productivity Commission &#38; New Zealand Productivity Commission</div>
  <div class="csl-entry">Weinstock, R., Leong, G. B., &#38; Silva, J. A.</div>
</div>'

Failure → citeproc test test-suite name_EditorTranslatorSameEmptyTerm.txt
Passed in:
(string) 'John Doe, John Doe'
Expected:
(string) 'John Doe (editor), John Doe (translator)'

Failure → citeproc test test-suite name_EditorTranslatorSameWithTerm.txt
Passed in:
(string) 'John Doe, John Doe'
Expected:
(string) 'John Doe (ed. &#38; tran.)'

Failure → citeproc test test-suite name_EtAlUseLast.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Anderson, John Brown, John Catharsis, John Doldrums, John Evergreen, John Fugedaboutit</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">John Anderson, John Brown, John Catharsis, John Doldrums, John Evergreen, John Fugedaboutit, … John Houynym</div>
</div>'

Failure → citeproc test test-suite name_FormattingOfParticles.txt
Passed in:
(string) 'Gerard van der Meer'
Expected:
(string) 'Gerard van DER MEER'

Failure → citeproc test test-suite name_HebrewAnd.txt
Passed in:
(string) 'תפוח ו  תפוז'
Expected:
(string) 'תפוחו תפוז'

Failure → citeproc test test-suite name_InTextMarkupInitialize.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><b>Doe</b>, <b>John</b> Q.</div>
  <div class="csl-entry"><b>Doe</b>, <b>John</b>-Q.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><b>Doe</b>, <b>J.</b> Q.</div>
  <div class="csl-entry"><b>Doe</b>, <b>J.</b>-Q.</div>
</div>'

Failure → citeproc test test-suite name_InTextMarkupNormalizeInitials.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><b>Doe</b>, <b>J</b> Q.</div>
  <div class="csl-entry"><b>Doe</b>, <b>J</b>-Q.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><b>Doe</b>, <b>J.</b> Q.</div>
  <div class="csl-entry"><b>Doe</b>, <b>J.</b>-Q.</div>
</div>'

Failure → citeproc test test-suite name_InstitutionDecoration.txt
Passed in:
(string) 'São Paulo (Estado)'
Expected:
(string) 'SÃO PAULO (ESTADO)'

Failure → citeproc test test-suite name_LabelAfterPlural.txt
Passed in:
(string) 'John Doe, Jane Roe'
Expected:
(string) 'John Doe, Jane Roeeditors'

Failure → citeproc test test-suite name_LabelAfterPluralDecorations.txt
Passed in:
(string) 'John Doe et al.'
Expected:
(string) 'John Doe et al. (editors)'

Failure → citeproc test test-suite name_LabelFormatBug.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'Aalto editor'

Failure → citeproc test test-suite name_ParseNames.txt
Passed in:
(string) 'van der Vlist, Eric; van Gogh, Vincent; Humboldt, Alexander von'
Expected:
(string) 'van Gogh, Vincent; Humboldt, Alexander von; van der Vlist, Eric'

Failure → citeproc test test-suite name_ParsedCommaDelimitedDroppingParticleSortOrderingWithoutAffixes.txt
Passed in:
(string) 'Aubignac, François Hédelin, abbé d''
Expected:
(string) 'AUBIGNAC, François Hédelin, abbé d’'

Failure → citeproc test test-suite name_ParsedDroppingParticleWithAffixes.txt
Passed in:
(string) 'La Fontaine Jean de'
Expected:
(string) '<span style="font-variant:small-caps;">La Fontaine</span> (Jean de)'

Failure → citeproc test test-suite name_ParsedDroppingParticleWithApostrophe.txt
Passed in:
(string) 'François Hédelin d' Aubignac'
Expected:
(string) 'François Hédelin (d’Aubignac)'

Failure → citeproc test test-suite name_ParsedNonDroppingParticleWithAffixes.txt
Passed in:
(string) 'La Fontaine Jean de'
Expected:
(string) '(<span style="font-variant:small-caps;">La Fontaine</span>) Jean de'

Failure → citeproc test test-suite name_ParsedNonDroppingParticleWithApostrophe.txt
Passed in:
(string) 'd’Aubignac François Hédelin'
Expected:
(string) '<span style="font-variant:small-caps;">Aubignac</span> (François Hédelin <span style="font-variant:small-caps;">d’</span>)'

Failure → citeproc test test-suite name_ParsedUpperCaseNonDroppingParticle.txt
Passed in:
(string) 'La Fontaine Jean de'
Expected:
(string) '<span style="font-variant:small-caps;">La Fontaine</span> (Jean de)'

Failure → citeproc test test-suite name_ParticleCaps3.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Onename van One, Twoname van Two</div>
  <div class="csl-entry">Threename van Three, Fourname Van Four</div>
  <div class="csl-entry">Dick “Van Dyke”</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Onename van One, Twoname van Two</div>
  <div class="csl-entry">Threename van Three, Fourname Van Four</div>
  <div class="csl-entry">Dick Van Dyke</div>
</div>'

Failure → citeproc test test-suite name_ParticleFormatting.txt
Passed in:
(string) 'la Doe, John de'
Expected:
(string) 'LA DOE, John de'

Failure → citeproc test test-suite name_ParticlesDemoteNonDroppingNever.txt
Passed in:
(string) 'Familyname, Givenname al
Familyname, Givenname dos
Familyname, Givenname el
Las Familyname, Givenname de
Familyname, Givenname lo
Familyname, Givenname les
Familyname, Givenname il
del Familyname, Givenname
Familyname, Givenname dela
Familyname, Givenname della
Familyname, Givenname dello
Di Familyname, Givenname
Da Familyname, Givenname
Do Familyname, Givenname
Des Familyname, Givenname
Lou Familyname, Givenname
Pietro Familyname, Givenname
de Familyname, Givenname
La Familyname, Givenname de
Familyname, Givenname du
Familyname, Givenname d'
Le Familyname, Givenname
La Familyname, Givenname
L’Familyname, Givenname
Saint Familyname, Givenname
Sainte Familyname, Givenname
St. Familyname, Givenname
Ste. Familyname, Givenname
van Familyname, Givenname
van de Familyname, Givenname
van der Familyname, Givenname
van den Familyname, Givenname
vander Familyname, Givenname
v.d. Familyname, Givenname
vd Familyname, Givenname
van het Familyname, Givenname
ver Familyname, Givenname
ten Familyname, Givenname
ter Familyname, Givenname
te Familyname, Givenname
Familyname, Givenname op de
in de Familyname, Givenname
in 't Familyname, Givenname
't Familyname, Givenname
in het Familyname, Givenname
uit de Familyname, Givenname
uit den Familyname, Givenname
Familyname, Givenname von
Familyname, Givenname von der
Familyname, Givenname von dem
Familyname, Givenname von zu
v. Familyname, Givenname
v Familyname, Givenname
Familyname, Givenname vom
Familyname, Givenname das
Familyname, Givenname zum
Familyname, Givenname zur
Familyname, Givenname den
Familyname, Givenname der
Familyname, Givenname des
Familyname, Givenname auf den'
Expected:
(string) '<b>Familyname</b>, <i>Givenname</i> <i>al</i>
<b>Familyname</b>, <i>Givenname</i> <i>dos</i>
<b>Familyname</b>, <i>Givenname</i> <i>el</i>
<b>Las Familyname</b>, <i>Givenname</i> <i>de</i>
<b>Familyname</b>, <i>Givenname</i> <i>lo</i>
<b>Familyname</b>, <i>Givenname</i> <i>les</i>
<b>Familyname</b>, <i>Givenname</i> <i>il</i>
<b>del</b> <b>Familyname</b>, <i>Givenname</i>
<b>Familyname</b>, <i>Givenname</i> <i>dela</i>
<b>Familyname</b>, <i>Givenname</i> <i>della</i>
<b>Familyname</b>, <i>Givenname</i> <i>dello</i>
<b>Di Familyname</b>, <i>Givenname</i>
<b>Da Familyname</b>, <i>Givenname</i>
<b>Do Familyname</b>, <i>Givenname</i>
<b>Des Familyname</b>, <i>Givenname</i>
<b>Lou Familyname</b>, <i>Givenname</i>
<b>Pietro Familyname</b>, <i>Givenname</i>
<b>de</b> <b>Familyname</b>, <i>Givenname</i>
<b>La Familyname</b>, <i>Givenname</i> <i>de</i>
<b>Familyname</b>, <i>Givenname</i> <i>du</i>
<b>Familyname</b>, <i>Givenname</i> <i>d’</i>
<b>Le Familyname</b>, <i>Givenname</i>
<b>La Familyname</b>, <i>Givenname</i>
<b>L’Familyname</b>, <i>Givenname</i>
<b>Saint Familyname</b>, <i>Givenname</i>
<b>Sainte Familyname</b>, <i>Givenname</i>
<b>St. Familyname</b>, <i>Givenname</i>
<b>Ste. Familyname</b>, <i>Givenname</i>
<b>van</b> <b>Familyname</b>, <i>Givenname</i>
<b>van de</b> <b>Familyname</b>, <i>Givenname</i>
<b>van der</b> <b>Familyname</b>, <i>Givenname</i>
<b>van den</b> <b>Familyname</b>, <i>Givenname</i>
<b>vander</b> <b>Familyname</b>, <i>Givenname</i>
<b>v.d.</b> <b>Familyname</b>, <i>Givenname</i>
<b>vd</b> <b>Familyname</b>, <i>Givenname</i>
<b>van het</b> <b>Familyname</b>, <i>Givenname</i>
<b>ver</b> <b>Familyname</b>, <i>Givenname</i>
<b>ten</b> <b>Familyname</b>, <i>Givenname</i>
<b>ter</b> <b>Familyname</b>, <i>Givenname</i>
<b>te</b> <b>Familyname</b>, <i>Givenname</i>
<b>Familyname</b>, <i>Givenname</i> <i>op de</i>
<b>in de</b> <b>Familyname</b>, <i>Givenname</i>
<b>in ’t</b> <b>Familyname</b>, <i>Givenname</i>
<b>’t</b> <b>Familyname</b>, <i>Givenname</i>
<b>in het</b> <b>Familyname</b>, <i>Givenname</i>
<b>uit de</b> <b>Familyname</b>, <i>Givenname</i>
<b>uit den</b> <b>Familyname</b>, <i>Givenname</i>
<b>Familyname</b>, <i>Givenname</i> <i>von</i>
<b>Familyname</b>, <i>Givenname</i> <i>von der</i>
<b>Familyname</b>, <i>Givenname</i> <i>von dem</i>
<b>Familyname</b>, <i>Givenname</i> <i>von zu</i>
<b>v.</b> <b>Familyname</b>, <i>Givenname</i>
<b>v</b> <b>Familyname</b>, <i>Givenname</i>
<b>Familyname</b>, <i>Givenname</i> <i>vom</i>
<b>Familyname</b>, <i>Givenname</i> <i>das</i>
<b>Familyname</b>, <i>Givenname</i> <i>zum</i>
<b>Familyname</b>, <i>Givenname</i> <i>zur</i>
<b>Familyname</b>, <i>Givenname</i> <i>den</i>
<b>Familyname</b>, <i>Givenname</i> <i>der</i>
<b>Familyname</b>, <i>Givenname</i> <i>des</i>
<b>Familyname</b>, <i>Givenname</i> <i>auf den</i>'

Failure → citeproc test test-suite name_SubsequentAuthorSubstituteMultipleNames.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Bumke, Courtly Culture: Literature and Society in the High Middle Ages, Dunlap</div>
  <div class="csl-entry">Bumke, Höfische</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Bumke, Courtly Culture: Literature and Society in the High Middle Ages, Dunlap tran.</div>
  <div class="csl-entry">-----, Höfische</div>
</div>'

Failure → citeproc test test-suite name_SubsequentAuthorSubstituteSingleField.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">.</div>
  <div class="csl-entry">.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Yomiuri Shinbun.</div>
  <div class="csl-entry">———.</div>
</div>'

Failure → citeproc test test-suite name_SubstituteInheritLabel.txt
Passed in:
(string) '[]; [X]John Doe]'
Expected:
(string) '[[X]Jane Roe (<i>ed.</i>); [X]John Doe]'

Failure → citeproc test test-suite name_SubstituteMacroInheritDecorations.txt
Passed in:
(string) '[]'
Expected:
(string) '[I AM A BLOB]'

Failure → citeproc test test-suite name_SubstituteName.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'John Doe'

Failure → citeproc test test-suite name_SubstituteOnDateGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) '2000'

Failure → citeproc test test-suite name_SubstituteOnGroupSpanGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'His Anonymous Life (this should appear)'

Failure → citeproc test test-suite name_SubstituteOnMacroGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'boo'

Failure → citeproc test test-suite name_SubstituteOnNamesSingletonGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) 'John Doe'

Failure → citeproc test test-suite name_SubstituteOnNamesSpanGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) '(John Doe)'

Failure → citeproc test test-suite name_SubstituteOnNamesSpanNamesSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) '(John Doe)'

Failure → citeproc test test-suite name_SubstituteOnNumberGroupSpanFail.txt
Passed in:
(string) '[CSL STYLE ERROR: reference with no printed form.]'
Expected:
(string) '5'

Failure → citeproc test test-suite name_SubstitutePartialEach.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"></div>
  <div class="csl-entry"></div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">Title One</div>
  <div class="csl-entry">---</div>
</div>'

Failure → citeproc test test-suite name_TwoRolesSameRenderingSeparateRoleLabels.txt
Passed in:
(string) 'Albert Asthma et al., Albert Asthma et al.'
Expected:
(string) 'Albert Asthma et al. (eds.), Albert Asthma et al. (trans.)'

Failure → citeproc test test-suite name_WesternPrimaryFontStyle.txt
Passed in:
(string) 'John Doe'
Expected:
(string) 'John <i>Doe</i>'

Failure → citeproc test test-suite name_WesternPrimaryFontStyleTwoAuthors.txt
Passed in:
(string) 'John Doe; Jane Roe'
Expected:
(string) 'John <b>Doe</b>; Jane <b>Roe</b>'

Failure → citeproc test test-suite name_WithNonBreakingSpace.txt
Passed in:
(string) 'John Doe'
Expected:
(string) 'John Doe'

Failure → citeproc test test-suite name_namepartAffixes.txt
Passed in:
(string) 'Jean de La Fontaine III'
Expected:
(string) '[Jean] (de La Fontaine III)'

Failure → citeproc test test-suite name_namepartAffixesNameAsSortOrder.txt
Passed in:
(string) 'Fontaine Jean de La III'
Expected:
(string) '(La Fontaine) [Jean de] III'

Failure → citeproc test test-suite name_namepartAffixesNameAsSortOrderDemoteNonDroppingParticle.txt
Passed in:
(string) 'Fontaine Jean de La III'
Expected:
(string) '(Fontaine) [Jean de La] III'

Failure → citeproc test test-suite number_LeadingZeros.txt
Passed in:
(string) '01790 (non-numeric)'
Expected:
(string) '01790 (is-numeric)'

Failure → citeproc test test-suite number_LimitOrdinalsToDayOne.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"></div>
  <div class="csl-entry"></div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">1<sup>e</sup><sup>r</sup>-14 octobre 2004</div>
  <div class="csl-entry">14 octobre-1<sup>e</sup><sup>r</sup> novembre 2004</div>
</div>'

Failure → citeproc test test-suite number_NewOrdinalsWithGenderChange.txt
Passed in:
(string) 'Title 1: 1'
Expected:
(string) 'Title 1: 1<sup>r</sup><sup>e</sup>femmie'

Failure → citeproc test test-suite number_OrdinalSpacing.txt
Passed in:
(string) 'Blah blah. 7, p. 3-8DD<i>ed</i>'
Expected:
(string) 'Blah blah. 7th, pp. 3–8DD<i>ed</i>'

Failure → citeproc test test-suite number_PlainHyphenOrEnDashAlwaysPlural.txt
Passed in:
(string) 'His Anonymous Life (1) pages 1–2 (cs:text) vs His Anonymous Life (1) pages 1–2 (cs:number); His Anonymous Life (2) pages i–ix (cs:text) vs His Anonymous Life (2) pages i–ix (cs:number); His Anonymous Life (3) pages 3\–B (cs:text) vs His Anonymous Life (3) pages 3\–B (cs:number); His Anonymous Life (4) pages Michaelson–Morely (cs:text) vs His Anonymous Life (4) pages Michaelson–Morely (cs:number); His Anonymous Life (4) pages Michaelson–Morely (cs:text) vs His Anonymous Life (4) pages Michaelson–Morely (cs:number)'
Expected:
(string) 'His Anonymous Life (1) pages 1–2 (cs:text) vs His Anonymous Life (1) pages 1–2 (cs:number); His Anonymous Life (2) pages i–ix (cs:text) vs His Anonymous Life (2) pages i–ix (cs:number); His Anonymous Life (3) page 3-B (cs:text) vs His Anonymous Life (3) page 3-B (cs:number); His Anonymous Life (4) page Michaelson-Morely (cs:text) vs His Anonymous Life (4) page Michaelson-Morely (cs:number)'

Failure → citeproc test test-suite number_PreserveDelimiter.txt
Passed in:
(string) '. Pages 187–228 <i>in</i> C. S. Stephen and M. L. Brown Analysis and interpretation of freshwater fisheries data C. S. Stephen and M. L. Brown'
Expected:
(string) '. Pages 187–228 <i>in</i> C. S. Stephen and M. L. Brown, editors. Analysis and interpretation of freshwater fisheries data'

Failure → citeproc test test-suite number_SeparateOrdinalNamespaces.txt
Passed in:
(string) 'With One, 1.<sup>a</sup> edition, 1.<sup>a</sup> issue; With Two, 2 edition, 2 issue; With Three, 3 edition, 3 issue'
Expected:
(string) 'With One, 1.<sup>a</sup> edition, 1.<sup>o</sup> issue; With Two, 2.<sup>a</sup> edition, 2.<sup>o</sup><sup>o</sup> issue; With Three, 3.<sup>a</sup> edition, 3.<sup>a</sup> issue'

Failure → citeproc test test-suite plural_LabelForced.txt
Passed in:
(string) '32-34'
Expected:
(string) 'p. 32–34'

Failure → citeproc test test-suite plural_NameLabelAlways.txt
Passed in:
(string) 'Doe'
Expected:
(string) 'Doe eds'

Failure → citeproc test test-suite plural_NameLabelContextualPlural.txt
Passed in:
(string) 'Doe and Roe'
Expected:
(string) 'Doe and Roe eds'

Failure → citeproc test test-suite plural_NameLabelContextualSingular.txt
Passed in:
(string) 'Doe'
Expected:
(string) 'Doe ed'

Failure → citeproc test test-suite plural_NameLabelDefaultPlural.txt
Passed in:
(string) 'Doe and Roe'
Expected:
(string) 'Doe and Roe eds'

Failure → citeproc test test-suite plural_NameLabelDefaultSingular.txt
Passed in:
(string) 'Doe'
Expected:
(string) 'Doe ed'

Failure → citeproc test test-suite plural_NameLabelNever.txt
Passed in:
(string) 'Doe and Roe'
Expected:
(string) 'Doe and Roe ed'

Failure → citeproc test test-suite position_FirstTrueOnlyOnce.txt
Passed in:
(string) '..[0] WTF?.
>>[1] WTF?.'
Expected:
(string) '..[0] Appleton “Tom Swift and His Electric Runabout” (1910).
>>[1] Ibid. p. 23.'

Failure → citeproc test test-suite position_IbidInText.txt
Passed in:
(string) '..[0] Appleton “Tom Swift and His Electric Runabout” (1910).
..[1] Bloggs “A Very Short Book Indeed” (2012).
>>[2] Appleton “Tom Swift and His Electric Runabout” (1910).'
Expected:
(string) '..[0] Appleton “Tom Swift and His Electric Runabout” (1910).
..[1] Bloggs “A Very Short Book Indeed” (2012).
>>[2] Ibid.'

Failure → citeproc test test-suite position_IbidSeparateCiteSameNote.txt
Passed in:
(string) '..[0] [citation1-item1-note1] Appleton “Tom Swift and His Electric Runabout” (1910).
..[1] [citation2-item1-note2] Appleton “Tom Swift and His Electric Runabout” (1910).
..[2] [citation3-item1-note2] Appleton “Tom Swift and His Electric Runabout” (1910).
..[3] [citation4-item2-note3] Bloggs “A Very Short Book Indeed” (2012).; [citation4-item1-note3] Appleton “Tom Swift and His Electric Runabout” (1910).
..[4] [citation5-item1-note4] Appleton “Tom Swift and His Electric Runabout” (1910).
..[5] [citation6-item1-note4] Appleton “Tom Swift and His Electric Runabout” (1910).
>>[6] [citation7-item1-note4] Appleton “Tom Swift and His Electric Runabout” (1910).'
Expected:
(string) '..[0] [citation1-item1-note1] Appleton “Tom Swift and His Electric Runabout” (1910).
..[1] [citation2-item1-note2] ibid.
..[2] [citation3-item1-note2] ibid. page 33.
..[3] [citation4-item2-note3] Bloggs “A Very Short Book Indeed” (2012); [citation4-item1-note3] Appleton supra note 1.
..[4] [citation5-item1-note4] Appleton supra note 1 page 99.
..[5] [citation6-item1-note4] Appleton supra note 1.
>>[6] [citation7-item1-note4] ibid.'

Failure → citeproc test test-suite position_IbidWithLocator.txt
Passed in:
(string) 'Appleton “Tom Swift and His Electric Runabout” (1910).
Appleton “Tom Swift and His Electric Runabout” (1910).'
Expected:
(string) 'Appleton “Tom Swift and His Electric Runabout” (1910).
Ibid. p. 23.'

Failure → citeproc test test-suite position_IbidWithMultipleSoloCitesInBackref.txt
Passed in:
(string) '..[0] Aalto
..[1] Álvarez
..[2] Álvarez
>>[3] Álvarez'
Expected:
(string) '..[0] Aalto
..[1] Álvarez
..[2] Álvarez
>>[3] Ibid.'

Failure → citeproc test test-suite position_IbidWithPrefixFullStop.txt
Passed in:
(string) '>>[0] Book A; . He said “Please work.” Book A'
Expected:
(string) '>>[0] Book A. He said “Please work.” Ibid.'

Failure → citeproc test test-suite position_IfIbidIsTrueThenSubsequentIsTrue.txt
Passed in:
(string) 'WTF?.
WTF?.'
Expected:
(string) 'Appleton “Tom Swift and His Electric Runabout” (1910).
SUBSEQUENT.'

Failure → citeproc test test-suite position_IfIbidWithLocatorIsTrueThenIbidIsTrue.txt
Passed in:
(string) 'WTF?.
WTF?.'
Expected:
(string) 'Appleton “Tom Swift and His Electric Runabout” (1910).
Ibid.'

Failure → citeproc test test-suite position_NearNoteSameNote.txt
Passed in:
(string) '..[0] Near+Ibid:Book-A; Near+Ibid:Book-A
..[1] Near+Ibid:Book-B
>>[2] Near+Ibid:Book-B; Near+Ibid:Book-A'
Expected:
(string) '..[0] Plain+Vanilla:Book-A; Near+Ibid:Book-A
..[1] Plain+Vanilla:Book-B
>>[2] Plain+Vanilla:Book-B; Plain+Vanilla:Book-A'

Failure → citeproc test test-suite position_ResetNoteNumbers.txt
Passed in:
(string) '..[0] Book A (note 1)
..[1] Book C (note 1)
..[2] Book A (note 2)
..[3] Book A (note 2)
..[4] Book C (note 3)
..[5] Book A (note 3)
..[6] Book C (note 4)
>>[7] Book A (note 5)'
Expected:
(string) '..[0] Book A (note 1)
..[1] Book C (note 1)
..[2] Book A, n 1 (note 2)
..[3] ibid (note 2)
..[4] Book C, n 1 (note 3)
..[5] Book A, n 1 (note 3)
..[6] Book C, n 1 (note 4)
>>[7] Book A, n 1 (note 5)'

Failure → citeproc test test-suite position_TrueInCitation.txt
Passed in:
(string) 'His Anonymous Life'
Expected:
(string) 'I am weak, and I have failed.'

Failure → citeproc test test-suite punctuation_DelimiterWithStripPeriodsAndSubstitute1.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">. Book Title. http://example.com/</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">J Doe, J Roe and R Noakes eds. Book Title. http://example.com/</div>
</div>'

Failure → citeproc test test-suite punctuation_DelimiterWithStripPeriodsAndSubstitute2.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">. Book Title</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">J Doe, J Roe and R Noakes eds. Book Title</div>
</div>'

Failure → citeproc test test-suite punctuation_DelimiterWithStripPeriodsAndSubstitute3.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">. Book Title</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">J Doe, J Roe and R Noakes eds. Book Title</div>
</div>'

Failure → citeproc test test-suite punctuation_FieldDuplicates.txt
Passed in:
(string) 'Doe, J.1965'
Expected:
(string) '<span style="font-variant:small-caps;">Doe, J.</span> 1965'

Failure → citeproc test test-suite punctuation_FrenchOrthography.txt
Passed in:
(string) 'His “ Anonymous ” Life'
Expected:
(string) 'His « Anonymous » Life'

Failure → citeproc test test-suite punctuation_FullMontyField.txt
Passed in:
(string) 'ENDING IN COLON
colon: colon
period.: colon
semicolon;: colon
exclamation!: colon
question?: colon
comma,: colon

ENDING IN PERIOD
colon:. period
period. period
semicolon;. period
exclamation!. period
question?. period
comma,. period

ENDING IN SEMICOLON
colon:; semicolon
period.; semicolon
semicolon; semicolon
exclamation!; semicolon
question?; semicolon
comma,; semicolon

ENDING IN EXCLAMATION
colon:! exclamation
period.! exclamation
semicolon;! exclamation
exclamation! exclamation
question?! exclamation
comma,! exclamation

ENDING IN QUESTION
colon:? question
period.? question
semicolon;? question
exclamation!? question
question? question
comma,? question

ENDING IN COMMA
colon:, comma
period., comma
semicolon;, comma
exclamation!, comma
question?, comma
comma, comma'
Expected:
(string) 'ENDING IN COLON
colon: colon
period.: colon
semicolon; colon
exclamation! colon
question? colon
comma,: colon

ENDING IN PERIOD
colon: period
period. period
semicolon; period
exclamation! period
question? period
comma,. period

ENDING IN SEMICOLON
colon:; semicolon
period.; semicolon
semicolon; semicolon
exclamation!; semicolon
question?; semicolon
comma,; semicolon

ENDING IN EXCLAMATION
colon! exclamation
period.! exclamation
semicolon! exclamation
exclamation! exclamation
question?! exclamation
comma,! exclamation

ENDING IN QUESTION
colon? question
period.? question
semicolon? question
exclamation!? question
question? question
comma,? question

ENDING IN COMMA
colon:, comma
period., comma
semicolon;, comma
exclamation!, comma
question?, comma
comma, comma'

Failure → citeproc test test-suite punctuation_FullMontyPlain.txt
Passed in:
(string) 'ENDING IN COLON
colon: colon
period.: colon
semicolon;: colon
exclamation!: colon
question?: colon
comma,: colon

ENDING IN PERIOD
colon:. period
period. period
semicolon;. period
exclamation!. period
question?. period
comma,. period

ENDING IN SEMICOLON
colon:; semicolon
period.; semicolon
semicolon; semicolon
exclamation!; semicolon
question?; semicolon
comma,; semicolon

ENDING IN EXCLAMATION
colon:! exclamation
period.! exclamation
semicolon;! exclamation
exclamation! exclamation
question?! exclamation
comma,! exclamation

ENDING IN QUESTION
colon:? question
period.? question
semicolon;? question
exclamation!? question
question? question
comma,? question

ENDING IN COMMA
colon:, comma
period., comma
semicolon;, comma
exclamation!, comma
question?, comma
comma, comma'
Expected:
(string) 'ENDING IN COLON
colon: colon
period.: colon
semicolon; colon
exclamation! colon
question? colon
comma,: colon

ENDING IN PERIOD
colon: period
period. period
semicolon; period
exclamation! period
question? period
comma,. period

ENDING IN SEMICOLON
colon:; semicolon
period.; semicolon
semicolon; semicolon
exclamation!; semicolon
question?; semicolon
comma,; semicolon

ENDING IN EXCLAMATION
colon! exclamation
period.! exclamation
semicolon! exclamation
exclamation! exclamation
question?! exclamation
comma,! exclamation

ENDING IN QUESTION
colon? question
period.? question
semicolon? question
exclamation!? question
question? question
comma,? question

ENDING IN COMMA
colon:, comma
period., comma
semicolon;, comma
exclamation!, comma
question?, comma
comma, comma'

Failure → citeproc test test-suite punctuation_FullMontyQuotesIn.txt
Passed in:
(string) 'ENDING IN COLON
“colon”: colon
“period.”: colon
“semicolon;”: colon
“exclamation”!: colon
“question?”: colon
“comma,”: colon

ENDING IN PERIOD
“colon”:. period
“period.” period
“semicolon;”. period
“exclamation”!. period
“question?”. period
“comma,”. period

ENDING IN SEMICOLON
“colon”:; semicolon
“period.”; semicolon
“semicolon;” semicolon
“exclamation”!; semicolon
“question?”; semicolon
“comma,”; semicolon

ENDING IN EXCLAMATION
“colon”:! exclamation
“period.”! exclamation
“semicolon;”! exclamation
“exclamation”! exclamation
“question?”! exclamation
“comma,”! exclamation

ENDING IN QUESTION
“colon”:? question
“period.”? question
“semicolon;”? question
“exclamation”!? question
“question?” question
“comma,”? question

ENDING IN COMMA
“colon”:, comma
“period.”, comma
“semicolon;”, comma
“exclamation”!, comma
“question?”, comma
“comma,” comma'
Expected:
(string) 'ENDING IN COLON
“colon”: colon
“period.”: colon
“semicolon”; colon
“exclamation!” colon
“question?” colon
“comma,”: colon

ENDING IN PERIOD
“colon”: period
“period.” period
“semicolon”; period
“exclamation!” period
“question?” period
“comma,.” period

ENDING IN SEMICOLON
“colon”:; semicolon
“period.”; semicolon
“semicolon”; semicolon
“exclamation!”; semicolon
“question?”; semicolon
“comma,”; semicolon

ENDING IN EXCLAMATION
“colon!” exclamation
“period.!” exclamation
“semicolon!” exclamation
“exclamation!” exclamation
“question?!” exclamation
“comma,!” exclamation

ENDING IN QUESTION
“colon?” question
“period.?” question
“semicolon?” question
“exclamation!?” question
“question?” question
“comma,?” question

ENDING IN COMMA
“colon”:, comma
“period.,” comma
“semicolon”;, comma
“exclamation!,” comma
“question?,” comma
“comma,” comma'

Failure → citeproc test test-suite punctuation_FullMontyQuotesOut.txt
Passed in:
(string) 'ENDING IN COLON
“colon”: colon
“period.”: colon
“semicolon;”: colon
“exclamation”!: colon
“question?”: colon
“comma,”: colon

ENDING IN PERIOD
“colon”:. period
“period.” period
“semicolon;”. period
“exclamation”!. period
“question?”. period
“comma,”. period

ENDING IN SEMICOLON
“colon”:; semicolon
“period.”; semicolon
“semicolon;” semicolon
“exclamation”!; semicolon
“question?”; semicolon
“comma,”; semicolon

ENDING IN EXCLAMATION
“colon”:! exclamation
“period.”! exclamation
“semicolon;”! exclamation
“exclamation”! exclamation
“question?”! exclamation
“comma,”! exclamation

ENDING IN QUESTION
“colon”:? question
“period.”? question
“semicolon;”? question
“exclamation”!? question
“question?” question
“comma,”? question

ENDING IN COMMA
“colon”:, comma
“period.”, comma
“semicolon;”, comma
“exclamation”!, comma
“question?”, comma
“comma,” comma'
Expected:
(string) 'ENDING IN COLON
“colon”: colon
“period”.: colon
“semicolon”; colon
“exclamation”! colon
“question”? colon
“comma”,: colon

ENDING IN PERIOD
“colon”: period
“period”. period
“semicolon”; period
“exclamation”! period
“question”? period
“comma”,. period

ENDING IN SEMICOLON
“colon”:; semicolon
“period”.; semicolon
“semicolon”; semicolon
“exclamation”!; semicolon
“question”?; semicolon
“comma”,; semicolon

ENDING IN EXCLAMATION
“colon”! exclamation
“period”.! exclamation
“semicolon”! exclamation
“exclamation”! exclamation
“question”?! exclamation
“comma”,! exclamation

ENDING IN QUESTION
“colon”? question
“period”.? question
“semicolon”? question
“exclamation”!? question
“question”? question
“comma”,? question

ENDING IN COMMA
“colon”:, comma
“period”., comma
“semicolon”;, comma
“exclamation”!, comma
“question”?, comma
“comma”, comma'

Failure → citeproc test test-suite punctuation_OnMacro.txt
Passed in:
(string) 'My TitleMy Publisher'
Expected:
(string) '“My Title.” My Publisher'

Failure → citeproc test test-suite sort_CaseInsensitiveCitation.txt
Passed in:
(string) 'Xyz - ABC - Aaa'
Expected:
(string) 'Aaa - ABC - Xyz'

Failure → citeproc test test-suite sort_Citation.txt
Passed in:
(string) 'Roe; Doe'
Expected:
(string) 'Doe; Roe'

Failure → citeproc test test-suite sort_CitationSecondaryKey.txt
Passed in:
(string) 'Roe 1995; Doe 1995'
Expected:
(string) 'Doe 1995; Roe 1995'

Failure → citeproc test test-suite sort_CiteGroupDelimiter.txt
Passed in:
(string) 'Aalto 2001; Banda 1999; Aalto 2000'
Expected:
(string) 'Banda 1999; Aalto 2000, Aalto 2001'

Failure → citeproc test test-suite sort_DateVariable.txt
Passed in:
(string) 'Book A; Book B'
Expected:
(string) 'Book B; Book A'

Failure → citeproc test test-suite sort_DateVariableMixedElementsAscendingA.txt
Passed in:
(string) 'Book A; Book B'
Expected:
(string) 'Book B; Book A'

Failure → citeproc test test-suite sort_DateVariableMixedElementsDescendingB.txt
Passed in:
(string) 'Book A; Book B'
Expected:
(string) 'Book B; Book A'

Failure → citeproc test test-suite sort_DateVariableRange.txt
Passed in:
(string) 'Book A; Book B'
Expected:
(string) 'Book B; Book A'

Failure → citeproc test test-suite sort_DateVariableRangeMixed.txt
Passed in:
(string) 'Book A; Book B'
Expected:
(string) 'Book B; Book A'

Failure → citeproc test test-suite sort_GroupedByAuthorstring.txt
Passed in:
(string) '>>[0] Smith 2010; Jones 2005; Smith 2003'
Expected:
(string) '>>[0] Smith 2003, 2010; Jones 2005'

Failure → citeproc test test-suite sort_LocalizedDateLimitedParts.txt
Passed in:
(string) 'Book A; Book C; Book D; Book B'
Expected:
(string) 'Book D; Book A; Book B; Book C'

Failure → citeproc test test-suite substitute_SuppressOrdinaryVariable.txt
Passed in:
(string) '<div class="csl-bib-body">
  <div class="csl-entry"><i>The Title</i>. The Publisher.</div>
  <div class="csl-entry"><i>The Title</i>. The Publisher.</div>
  <div class="csl-entry"><i>The Title</i>. The Organization.</div>
</div>'
Expected:
(string) '<div class="csl-bib-body">
  <div class="csl-entry">“The Title.” The Publisher.</div>
  <div class="csl-entry">John-boy Doe ed. <i>The Title</i>. The Publisher.</div>
  <div class="csl-entry">Jane-girl Doe editor. <i>The Title</i>. The Organization.</div>
</div>'

Failure → citeproc test test-suite textcase_LocaleUnicode.txt
Passed in:
(string) 'IA AND IB EN
IA AND IB EN
IC AND ID TR
BAD LANGUAGE CODE THAT PASSES IN NODE.JS BUT FAILS IN SOME BROWSERS'
Expected:
(string) 'IA AND IB EN
IA AND IB EN
İC AND ID TR
BAD LANGUAGE CODE THAT PASSES IN NODE.JS BUT FAILS IN SOME BROWSERS'

Failure → citeproc test test-suite textcase_NoSpaceBeforeApostrophe.txt
Passed in:
(string) 'Marcus Shafi’i, Response to Shafi’I Comment
Marcus Shafi`i, Response to Shafi`i Comment'
Expected:
(string) 'Marcus Shafi’i (ed.), Response to Shafi’i Comment
Marcus Shafi`i (ed.), Response to Shafi`i Comment'

Failure → citeproc test test-suite textcase_SentenceCapitalization.txt
Passed in:
(string) 'This is a Pen that is a Smith Pencil'
Expected:
(string) 'This is a pen that is a Smith pencil'

Failure → citeproc test test-suite textcase_SkipNameParticlesInTitleCase.txt
Passed in:
(string) 'John von Doe: An About up Life; John van Doe? A Life; John D’Doe! A Life; John de Doe a Life'
Expected:
(string) 'John von Doe: An about up Life; John van Doe? A Life; John d’Doe! A Life; John de Doe a Life'

Failure → citeproc test test-suite textcase_Uppercase.txt
Passed in:
(string) 'Smith, John: THIS IS A PEN THAT IS A Smith PENCIL'
Expected:
(string) 'SMITH, John: THIS IS A PEN THAT IS A Smith PENCIL'

Failure → citeproc test test-suite variables_TitleShortOnShortTitleNoTitleCondition.txt
Passed in:
(string) 'My Long Title 1 does not have title-short
My Long Title 2 does not have title-short
does not have title-short'
Expected:
(string) 'My Long Title 1 has title-short
My Long Title 2 does not have title-short
does not have title-short'

Error → citeproc test test-suite affix_WithCommas.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AccidentalAllCaps.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AllCapsLeakage.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AsmJournals.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AuthorPosition.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AuthorYear.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_AutomaticallyDeleteItemsFails.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_BadDelimiterBeforeCollapse.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_ByBy.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_ChicagoAuthorDateLooping.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_CollapseFailure.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_CreepingAddNames.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DemoPageFullCiteCruftOnSubsequent.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DisambiguationAddNames.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DisambiguationAddNamesBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DoubleEncodedAngleBraces.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DuplicateSpaces.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_DuplicateSpaces2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_DuplicateSpaces3.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_DuplicateTerminalPunctuationInBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_FourAndFour.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_GreekStyleProblems.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_GreekStyleTwoEditors.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_IeeePunctuation.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_LabelsOutOfPlace.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_MatchedAuthorAndDate.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_MissingItemInJoin.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_MovePunctuationInsideQuotesForLocator.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_NoCaseEscape.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_NoEventInNestedMacroWithOldProcessor.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_NoTitle.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_OldMhraDisambiguationFailure.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_ProcessorHang1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SelfLink.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SingleQuote.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_SingleQuoteXml.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SmallCapsEscape.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SortSecondaryKey.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SortSecondaryKeyBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_SortedIeeeItalicsFail.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_StyleError001.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_ThesisUniversityAppearsTwice.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_UndefinedBeforeVal.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_UndefinedInName.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_UndefinedInName2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_UndefinedNotString.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_UndefinedStr.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite bugreports_YearSuffixInHarvard1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_YearSuffixLingers.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_disambiguate.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_ikeyOne.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_parenthesis.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite bugreports_undefinedCrash.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite collapse_ChicagoAfterCollapse.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_AccessedCrash.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_DayOrdinalDayOneOnly.txt
./citeproc/citeproc-node-date.lua:503: attempt to call a nil value (method 'get_locale_option')

Error → citeproc test test-suite date_DisappearingBug.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_KeyVariable.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_LiteralFailGracefullyIfNoValue.txt
./citeproc/citeproc-node-date.lua:88: attempt to index a nil value (local 'ir')

Error → citeproc test test-suite date_NonexistentSortReverseBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_SortEmptyDatesBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite date_String.txt
./citeproc/citeproc-node-date.lua:88: attempt to index a nil value (local 'ir')

Error → citeproc test test-suite disambiguate_AllNamesBaseNameCountOnFailureIfYearSuffixAvailable.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_AllNamesWithInitialsBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_ByCiteIncremental1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_ByCiteIncremental2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_ByCiteIsDefault.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_ByCiteMinimalGivennameExpandMinimalNames.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_FailWithYearSuffix.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_HonorFullnameInBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_InitializeWithButNoDisambiguation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_SetsOfNames.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_SkipAccessedYearSuffix.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_WithOriginalYear.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixAndSort.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixMidInsert.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixTwoPairsBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixTwoPairsFirstNameBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixTwoPairsFullNamesBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite disambiguate_YearSuffixWithMixedCreatorTypes.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite display_AuthorAsHeading.txt
./citeproc/citeproc-output.lua:494: bad argument #1 to 'for iterator' (table expected, got nil)

Error → citeproc test test-suite display_DisplayBlock.txt
./citeproc/citeproc-output.lua:494: bad argument #1 to 'for iterator' (table expected, got nil)

Error → citeproc test test-suite display_LostSuffix.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite display_SecondFieldAlignClone.txt
./citeproc/citeproc-output.lua:494: bad argument #1 to 'for iterator' (table expected, got nil)

Error → citeproc test test-suite display_SecondFieldAlignMigratePunctuation.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite etal_CitationAndBibliographyDecorationsInBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite etal_CitationAndBibliographyDecorationsInCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite flipflop_Apostrophes.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite fullstyles_ABdNT.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite fullstyles_APA.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite fullstyles_ChicagoArticleTitleQuestion.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite fullstyles_ChicagoAuthorDateSimple.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite fullstyles_ChicagoNoteWithBibliographyWithPublisher.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite group_ComplexNesting.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite group_LegalWithAuthorDate.txt
./citeproc/citeproc-util.lua:235: bad argument #1 to 'gmatch' (string expected, got table)

Error → citeproc test test-suite group_SuppressWithEmptyNestedDateNode.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite label_EditorTranslator1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite label_MissingReturnsEmpty.txt
./citeproc/citeproc-output.lua:148: attempt to concatenate a nil value (local 'str')

Error → citeproc test test-suite label_NameLabelThroughSubstitute.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite magic_AllowRepeatDateRenderings.txt
./citeproc/citeproc-util.lua:235: bad argument #1 to 'gmatch' (string expected, got table)

Error → citeproc test test-suite magic_CitationLabelInBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite magic_CitationLabelInCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite magic_StripPeriodsTrueShortForm.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite magic_SubsequentAuthorSubstituteNotFooled.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_BibliographyNameFormNeverShrinks.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_CiteGroupDelimiterWithYearCollapse.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_CiteGroupDelimiterWithYearSuffixCollapse2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_CiteGroupDelimiterWithYearSuffixCollapse3.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_EditorTranslatorBoth.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_EditorTranslatorWithTranslatorOnlyBib.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_EtAlWithCombined.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite name_HyphenatedNonDroppingParticle1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_HyphenatedNonDroppingParticle2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite name_LiteralWithComma.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite number_NewOrdinalsEdition.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite position_FalseInBibliography.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite position_IbidWithSuffix.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite position_NearNoteWithPlugin.txt
./citeproc/citeproc-util.lua:235: bad argument #1 to 'gmatch' (string expected, got table)

Error → citeproc test test-suite punctuation_DefaultYearSuffixDelimiter.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite punctuation_SemicolonDelimiter.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite punctuation_SuppressPrefixPeriodForDelimiterSemicolon.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite quotes_PunctuationNasty.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite quotes_QuotesUnderQuotesFalse.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite simplespace_case1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_AguStyle.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_AguStyleReverseGroups.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_AuthorDateWithYearSuffix.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_BibliographyCitationNumberDescending.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_BibliographyCitationNumberDescendingSecondary.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_BibliographyCitationNumberDescendingViaCompositeMacro.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_BibliographyCitationNumberDescendingViaMacro.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_BibliographyResortOnUpdate.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CaseInsensitiveBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_ChangeInNameSort.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_ChicagoYearSuffix1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_ChicagoYearSuffix2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryAscendingViaMacroBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryAscendingViaMacroCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryAscendingViaVariableBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryAscendingViaVariableCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryDescendingViaMacroBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryDescendingViaMacroCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryDescendingViaVariableBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberPrimaryDescendingViaVariableCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberSecondaryAscendingViaMacroBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberSecondaryAscendingViaMacroCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberSecondaryAscendingViaVariableBibliography.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_CitationNumberSecondaryAscendingViaVariableCitation.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_ConditionalMacroDates.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_DaleDalebout.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_DateMacroSortWithSecondFieldAlign.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_DropNameLabelInSort.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_EtAlUseLast.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_FamilyOnly.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_LeadingA.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_LeadingApostropheOnNameParticle.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NameImplicitSortOrderAndForm.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NameParticleInNameSortFalse.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NameParticleInNameSortTrue.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NameVariable.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NamesUseLast.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_NumberOfAuthorsAsKey.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_OmittedBibRefMixedNumericStyle.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite sort_OmittedBibRefNonNumericStyle.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite sort_Quotes.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_RangeUnaffected.txt
./citeproc/citeproc-output.lua:815: attempt to index a nil value (local 'inline')

Error → citeproc test test-suite sort_SeparateAuthorsAndOthers.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_StatusFieldAscending.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_StatusFieldDescending.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_SubstituteTitle.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_VariousNameMacros1.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_VariousNameMacros2.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_VariousNameMacros3.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite sort_WithAndInOneEntry.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite substitute_SharedMacro.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite substitute_SubstituteOnlyOnceString.txt
./citeproc/citeproc-util.lua:114: Invalid string.

Error → citeproc test test-suite substitute_SubstituteOnlyOnceTerm.txt
./citeproc/citeproc-util.lua:114: Invalid string.

Error → citeproc test test-suite substitute_SubstituteOnlyOnceVariable.txt
./citeproc/citeproc-util.lua:114: Invalid string.

Error → citeproc test test-suite testers_FirstAutoGeneratedZoteroPluginTest.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite testers_SecondAutoGeneratedZoteroPluginTest.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite textcase_RepeatedTitleBug.txt
./citeproc/citeproc-node-sort.lua:35: bad argument #1 to 'sub' (string expected, got nil)

Error → citeproc test test-suite variables_ContainerTitleShort.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')

Error → citeproc test test-suite variables_ContainerTitleShort2.txt
./citeproc/citeproc-node-choose.lua:183: attempt to index a nil value (field 'cite')
